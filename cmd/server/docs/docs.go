// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "GPL-3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apps/checkupdate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get app list update",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppUpdateRes"
                        }
                    }
                }
            }
        },
        "/apps/detail/{appId}/{version}/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app detail by appid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "app id",
                        "name": "appId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppDetailDTO"
                        }
                    }
                }
            }
        },
        "/apps/details/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get app detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppDetailDTO"
                        }
                    }
                }
            }
        },
        "/apps/ignored": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get Ignore App",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.IgnoredApp"
                        }
                    }
                }
            }
        },
        "/apps/install": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Install app",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstallCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AppInstall"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Install app [name]",
                    "formatZH": "安装应用 [name]",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Check app installed",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppInstalledCheck"
                        }
                    }
                }
            }
        },
        "/apps/installed/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search default config by key",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/apps/installed/conninfo/{key}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app password by key",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DatabaseConn"
                        }
                    }
                }
            }
        },
        "/apps/installed/delete/check/{appInstallId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Check before delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "App install id",
                        "name": "appInstallId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AppResource"
                            }
                        }
                    }
                }
            }
        },
        "/apps/installed/ignore": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "ignore App Update",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledIgnoreUpgrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "installId"
                    ],
                    "formatEN": "Application param update [installId]",
                    "formatZH": "忽略应用 [installId] 版本升级",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "List app installed",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AppInstallInfo"
                            }
                        }
                    }
                }
            }
        },
        "/apps/installed/loadport": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app port by key",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/apps/installed/op": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Operate installed app",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "app_installs",
                            "input_column": "id",
                            "input_value": "installId",
                            "isList": false,
                            "output_column": "app_id",
                            "output_value": "appId"
                        },
                        {
                            "db": "app_installs",
                            "input_column": "id",
                            "input_value": "installId",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "appName"
                        },
                        {
                            "db": "apps",
                            "input_column": "id",
                            "input_value": "appId",
                            "isList": false,
                            "output_column": "key",
                            "output_value": "appKey"
                        }
                    ],
                    "bodyKeys": [
                        "installId",
                        "operate"
                    ],
                    "formatEN": "[operate] App [appKey][appName]",
                    "formatZH": "[operate] 应用 [appKey][appName]",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/params/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Change app params",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "installId"
                    ],
                    "formatEN": "Application param update [installId]",
                    "formatZH": "应用参数修改 [installId]",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/params/{appInstallId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search params by appInstallId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "appInstallId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppConfig"
                        }
                    }
                }
            }
        },
        "/apps/installed/port/change": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Change app port",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PortUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "name",
                        "port"
                    ],
                    "formatEN": "Application port update [key]-[name] =\u003e [port]",
                    "formatZH": "应用端口修改 [key]-[name] =\u003e [port]",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Page app installed",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/apps/installed/sync": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "App"
                ],
                "summary": "Sync app installed",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Sync the list of installed apps",
                    "formatZH": "同步已安装应用列表",
                    "paramKeys": []
                }
            }
        },
        "/apps/installed/update/versions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app update version by install id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AppVersion"
                            }
                        }
                    }
                }
            }
        },
        "/apps/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "List apps",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppRes"
                        }
                    }
                }
            }
        },
        "/apps/services/{key}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app service by key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AppService"
                            }
                        }
                    }
                }
            }
        },
        "/apps/sync": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "App"
                ],
                "summary": "Sync app list",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "App store synchronization",
                    "formatZH": "应用商店同步",
                    "paramKeys": []
                }
            }
        },
        "/apps/{key}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app by key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AppDTO"
                        }
                    }
                }
            }
        },
        "/auth/captcha": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Load captcha",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CaptchaResponse"
                        }
                    }
                }
            }
        },
        "/auth/demo": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check System isDemo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/intl": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check System isIntl",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/language": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Load System Language",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secure entrance base64 encrypted string",
                        "name": "EntranceCode",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginInfo"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/mfalogin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login with mfa",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MFALogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginInfo"
                        },
                        "headers": {
                            "EntranceCode": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/containers": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Create container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "image"
                    ],
                    "formatEN": "create container [name][image]",
                    "formatZH": "创建容器 [name][image]",
                    "paramKeys": []
                }
            }
        },
        "/containers/clean/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Clean container log",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "clean container [name] logs",
                    "formatZH": "清理容器 [name] 日志",
                    "paramKeys": []
                }
            }
        },
        "/containers/commit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Commit Container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerCommit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/containers/compose": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Create compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create compose [name]",
                    "formatZH": "创建 compose [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Operate compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "operation"
                    ],
                    "formatEN": "compose [operation] [name]",
                    "formatZH": "compose [operation] [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Page composes",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/compose/search/log": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Container Compose logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "compose file address",
                        "name": "compose",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "date",
                        "name": "since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "follow",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tail",
                        "name": "tail",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/containers/compose/test": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Test compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "check compose [name]",
                    "formatZH": "检测 compose [name] 格式",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Update Container Compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "update compose information [name]",
                    "formatZH": "更新 compose [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/daemonjson": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Load docker daemon.json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DaemonJsonConf"
                        }
                    }
                }
            }
        },
        "/containers/daemonjson/file": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Load docker daemon.json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/daemonjson/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SettingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "Updated configuration [key]",
                    "formatZH": "更新配置 [key]",
                    "paramKeys": []
                }
            }
        },
        "/containers/daemonjson/update/byfile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DaemonJsonUpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Updated configuration file",
                    "formatZH": "更新配置文件",
                    "paramKeys": []
                }
            }
        },
        "/containers/docker/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Operate docker",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DockerOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] docker service",
                    "formatZH": "docker 服务 [operation]",
                    "paramKeys": []
                }
            }
        },
        "/containers/docker/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Load docker status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/download/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Download Container logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/containers/image": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "load images options",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Options"
                            }
                        }
                    }
                }
            }
        },
        "/containers/image/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "List all images",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ImageInfo"
                            }
                        }
                    }
                }
            }
        },
        "/containers/image/build": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Build image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageBuild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "build image [name]",
                    "formatZH": "构建镜像 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/load": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Load image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "load image from [path]",
                    "formatZH": "从 [path] 加载镜像",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/pull": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Pull image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImagePull"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "imageName"
                    ],
                    "formatEN": "image pull [reponame][imageName]",
                    "formatZH": "镜像拉取 [reponame][imageName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/push": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Push image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImagePush"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "tagName",
                        "name"
                    ],
                    "formatEN": "push [tagName] to [reponame][name]",
                    "formatZH": "[tagName] 推送到 [reponame][name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/remove": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Delete image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "remove image [names]",
                    "formatZH": "移除镜像 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Save image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageSave"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "tagName",
                        "path",
                        "name"
                    ],
                    "formatEN": "save [tagName] as [path]/[name]",
                    "formatZH": "保留 [tagName] 为 [path]/[name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Page images",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/image/tag": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Tag image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "targetName"
                    ],
                    "formatEN": "tag image [reponame][targetName]",
                    "formatZH": "tag 镜像 [reponame][targetName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Load container info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerOperate"
                        }
                    }
                }
            }
        },
        "/containers/inspect": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Container inspect",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InspectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/ipv6option/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json ipv6 option",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Updated the ipv6 option",
                    "formatZH": "更新 ipv6 配置",
                    "paramKeys": []
                }
            }
        },
        "/containers/limit": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "summary": "Load container limits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResourceLimit"
                        }
                    }
                }
            }
        },
        "/containers/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "List containers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/containers/list/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "summary": "Load container stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ContainerListStats"
                            }
                        }
                    }
                }
            }
        },
        "/containers/load/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Load container log",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/logoption/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json log option",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Updated the log option",
                    "formatZH": "更新日志配置",
                    "paramKeys": []
                }
            }
        },
        "/containers/network": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "List networks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Options"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Create network",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NetworkCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create container network [name]",
                    "formatZH": "创建容器网络 name",
                    "paramKeys": []
                }
            }
        },
        "/containers/network/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Delete network",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "delete container network [names]",
                    "formatZH": "删除容器网络 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/network/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Page networks",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Operate Container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "names",
                        "operation"
                    ],
                    "formatEN": "container [operation] [names]",
                    "formatZH": "容器 [names] 执行 [operation]",
                    "paramKeys": []
                }
            }
        },
        "/containers/prune": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Clean container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerPrune"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerPruneReport"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "pruneType"
                    ],
                    "formatEN": "clean container [pruneType]",
                    "formatZH": "清理容器 [pruneType]",
                    "paramKeys": []
                }
            }
        },
        "/containers/rename": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Rename Container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerRename"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "newName"
                    ],
                    "formatEN": "rename container [name] =\u003e [newName]",
                    "formatZH": "容器重命名 [name] =\u003e [newName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "List image repos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ImageRepoOption"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Create image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create image repo [name]",
                    "formatZH": "创建镜像仓库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Delete image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete image repo [names]",
                    "formatZH": "删除镜像仓库 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Page image repos",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/repo/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Load repo status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/containers/repo/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Update image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update image repo information [name]",
                    "formatZH": "更新镜像仓库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Page containers",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/search/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Container logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "container name",
                        "name": "container",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "since",
                        "name": "since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "follow",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tail",
                        "name": "tail",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/containers/stats/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Container stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "container id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerStats"
                        }
                    }
                }
            }
        },
        "/containers/template": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "List compose templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ComposeTemplateInfo"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Create compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeTemplateCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create compose template [name]",
                    "formatZH": "创建 compose 模版 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/template/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Delete compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "compose_templates",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete compose template [names]",
                    "formatZH": "删除 compose 模版 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/template/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Page compose templates",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/template/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Update compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeTemplateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "compose_templates",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update compose template information [name]",
                    "formatZH": "更新 compose 模版 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Update container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "image"
                    ],
                    "formatEN": "update container [name][image]",
                    "formatZH": "更新容器 [name][image]",
                    "paramKeys": []
                }
            }
        },
        "/containers/upgrade": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Upgrade container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerUpgrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "image"
                    ],
                    "formatEN": "upgrade container image [name][image]",
                    "formatZH": "更新容器镜像 [name][image]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "List Container Volumes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Options"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Create Container Volume",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VolumeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create container volume [name]",
                    "formatZH": "创建容器存储卷 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Delete Container Volume",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "delete container volume [names]",
                    "formatZH": "删除容器存储卷 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Page Container Volumes",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/cronjobs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Create cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type",
                        "name"
                    ],
                    "formatEN": "create cronjob [type][name]",
                    "formatZH": "创建计划任务 [type][name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Delete cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobBatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "cronjobs",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete cronjob [names]",
                    "formatZH": "删除计划任务 [names]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Download cronjob records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobDownload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "job_records",
                            "input_column": "id",
                            "input_value": "recordID",
                            "isList": false,
                            "output_column": "file",
                            "output_value": "file"
                        }
                    ],
                    "bodyKeys": [
                        "recordID"
                    ],
                    "formatEN": "download the cronjob record [file]",
                    "formatZH": "下载计划任务记录 [file]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/handle": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Handle cronjob once",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "cronjobs",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "manually execute the cronjob [name]",
                    "formatZH": "手动执行计划任务 [name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/records/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Clean job records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobClean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "cronjobs",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "clean cronjob [name] records",
                    "formatZH": "清空计划任务记录 [name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/records/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Load Cronjob record log",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cronjobs/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Page cronjobs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageCronjob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/cronjobs/search/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Page job records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/cronjobs/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Update cronjob status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobUpdateStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "cronjobs",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "status"
                    ],
                    "formatEN": "change the status of cronjob [name] to [status].",
                    "formatZH": "修改计划任务 [name] 状态为 [status]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Update cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "cronjobs",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update cronjob [name]",
                    "formatZH": "更新计划任务 [name]",
                    "paramKeys": []
                }
            }
        },
        "/dashboard/base/os": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Load os info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OsInfo"
                        }
                    }
                }
            }
        },
        "/dashboard/base/{ioOption}/{netOption}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Load dashboard base info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "ioOption",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request",
                        "name": "netOption",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DashboardBase"
                        }
                    }
                }
            }
        },
        "/dashboard/current": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Load dashboard current info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DashboardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DashboardCurrent"
                        }
                    }
                }
            }
        },
        "/dashboard/system/restart/{operation}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "System restart panel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "operation",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/databases": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Create mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create mysql database [name]",
                    "formatZH": "创建 mysql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/bind": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Bind user of mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BindUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "database",
                        "username"
                    ],
                    "formatEN": "bind mysql database [database] [username]",
                    "formatZH": "绑定 mysql 数据库名 [database] [username]",
                    "paramKeys": []
                }
            }
        },
        "/databases/change/access": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Change mysql access",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_mysqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update database [name] access",
                    "formatZH": "更新数据库 [name] 访问权限",
                    "paramKeys": []
                }
            }
        },
        "/databases/change/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Change mysql password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_mysqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update database [name] password",
                    "formatZH": "更新数据库 [name] 密码",
                    "paramKeys": []
                }
            }
        },
        "/databases/common/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Common"
                ],
                "summary": "Load base info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DBBaseInfo"
                        }
                    }
                }
            }
        },
        "/databases/common/load/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Common"
                ],
                "summary": "Load Database conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/databases/common/update/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Common"
                ],
                "summary": "Update conf by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DBConfUpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type",
                        "database"
                    ],
                    "formatEN": "update the [type] [database] database configuration information",
                    "formatZH": "更新 [type] 数据库 [database] 配置信息",
                    "paramKeys": []
                }
            }
        },
        "/databases/db": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Create database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "create database [name][type]",
                    "formatZH": "创建远程数据库 [name][type]",
                    "paramKeys": []
                }
            }
        },
        "/databases/db/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Check database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "check if database [name][type] is connectable",
                    "formatZH": "检测远程数据库 [name][type] 连接性",
                    "paramKeys": []
                }
            }
        },
        "/databases/db/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Delete database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "databases",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete database [names]",
                    "formatZH": "删除远程数据库 [names]",
                    "paramKeys": []
                }
            }
        },
        "/databases/db/item/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Retrieve database list based on type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DatabaseItem"
                            }
                        }
                    }
                }
            }
        },
        "/databases/db/list/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Database"
                ],
                "summary": "List databases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DatabaseOption"
                            }
                        }
                    }
                }
            }
        },
        "/databases/db/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Page databases",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases/db/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Update database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "update database [name]",
                    "formatZH": "更新远程数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/db/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Get databases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseInfo"
                        }
                    }
                }
            }
        },
        "/databases/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Delete mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_mysqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete mysql database [name]",
                    "formatZH": "删除 mysql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/del/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Check before delete mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBDeleteCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/databases/description/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Update mysql database description",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_mysqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "description"
                    ],
                    "formatEN": "The description of the mysql database [name] is modified =\u003e [description]",
                    "formatZH": "mysql 数据库 [name] 描述信息修改 [description]",
                    "paramKeys": []
                }
            }
        },
        "/databases/load": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql database from remote",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlLoadDB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/databases/options": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "List mysql database names",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.MysqlOption"
                            }
                        }
                    }
                }
            }
        },
        "/databases/pg": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Create postgresql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlDBCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create postgresql database [name]",
                    "formatZH": "创建 postgresql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/bind": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Bind postgresql user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlBindUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "username"
                    ],
                    "formatEN": "bind postgresql database [name] user [username]",
                    "formatZH": "绑定 postgresql 数据库 [name] 用户 [username]",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Delete postgresql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlDBDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_postgresqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete postgresql database [name]",
                    "formatZH": "删除 postgresql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/del/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Check before delete postgresql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlDBDeleteCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/databases/pg/description": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Update postgresql database description",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_postgresqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "description"
                    ],
                    "formatEN": "The description of the postgresql database [name] is modified =\u003e [description]",
                    "formatZH": "postgresql 数据库 [name] 描述信息修改 [description]",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Change postgresql password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "database_postgresqls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update database [name] password",
                    "formatZH": "更新数据库 [name] 密码",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/privileges": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Change postgresql privileges",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "database",
                        "username"
                    ],
                    "formatEN": "Update [user] privileges of database [database]",
                    "formatZH": "更新数据库 [database] 用户 [username] 权限",
                    "paramKeys": []
                }
            }
        },
        "/databases/pg/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Page postgresql databases",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlDBSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases/pg/{database}/load": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Postgresql"
                ],
                "summary": "Load postgresql database from remote",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostgresqlLoadDB"
                        }
                    },
                    {
                        "type": "string",
                        "description": "database",
                        "name": "database",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/databases/redis/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConf"
                        }
                    }
                }
            }
        },
        "/databases/redis/conf/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Update redis conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConfUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "update the redis database configuration information",
                    "formatZH": "更新 redis 数据库配置信息",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/install/cli": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Install redis-cli",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/databases/redis/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Change redis password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeRedisPass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "change the password of the redis database",
                    "formatZH": "修改 redis 数据库密码",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/persistence/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis persistence conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisPersistence"
                        }
                    }
                }
            }
        },
        "/databases/redis/persistence/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Update redis persistence conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConfPersistenceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "redis database persistence configuration update",
                    "formatZH": "redis 数据库持久化配置更新",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis status info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisStatus"
                        }
                    }
                }
            }
        },
        "/databases/remote": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql remote access",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/databases/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Page mysql databases",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql status info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlStatus"
                        }
                    }
                }
            }
        },
        "/databases/variables": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql variables info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithNameAndType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlVariables"
                        }
                    }
                }
            }
        },
        "/databases/variables/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Update mysql variables",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlVariablesUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "adjust mysql database performance parameters",
                    "formatZH": "调整 mysql 数据库性能参数",
                    "paramKeys": []
                }
            }
        },
        "/db/remote/del/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Check before delete remote database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Create file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Create dir or file [path]",
                    "formatZH": "创建文件/文件夹 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/batch/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Batch delete file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileBatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "paths"
                    ],
                    "formatEN": "Batch delete dir or file [paths]",
                    "formatZH": "批量删除文件/文件夹 [paths]",
                    "paramKeys": []
                }
            }
        },
        "/files/batch/role": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Batch change file mode and owner",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "paths",
                        "mode",
                        "user",
                        "group"
                    ],
                    "formatEN": "Batch change file mode and owner [paths] =\u003e [mode]/[user]/[group]",
                    "formatZH": "批量修改文件权限和用户/组 [paths] =\u003e [mode]/[user]/[group]",
                    "paramKeys": []
                }
            }
        },
        "/files/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Check file exist",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FilePathCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/files/chunkdownload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Chunk Download file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileDownload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Download file [name]",
                    "formatZH": "下载文件 [name]",
                    "paramKeys": []
                }
            }
        },
        "/files/chunkupload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Chunk upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "request",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/files/compress": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Compress file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileCompress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Compress file [name]",
                    "formatZH": "压缩文件 [name]",
                    "paramKeys": []
                }
            }
        },
        "/files/content": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Load file content",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileContentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FileInfo"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Load file content [path]",
                    "formatZH": "获取文件内容 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/decompress": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Decompress file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileDeCompress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Decompress file [path]",
                    "formatZH": "解压 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Delete file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Delete dir or file [path]",
                    "formatZH": "删除文件/文件夹 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Download file",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/files/favorite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Create favorite",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FavoriteCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Favorite"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "收藏文件/文件夹 [path]",
                    "formatZH": "收藏文件/文件夹 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/favorite/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Delete favorite",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FavoriteDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "favorites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "path",
                            "output_value": "path"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete avorite [path]",
                    "formatZH": "删除收藏 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/favorite/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "List favorites",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/files/mode": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Change file mode",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path",
                        "mode"
                    ],
                    "formatEN": "Change mode [paths] =\u003e [mode]",
                    "formatZH": "修改权限 [paths] =\u003e [mode]",
                    "paramKeys": []
                }
            }
        },
        "/files/move": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Move file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileMove"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "oldPaths",
                        "newPath"
                    ],
                    "formatEN": "Move [oldPaths] =\u003e [newPath]",
                    "formatZH": "移动文件 [oldPaths] =\u003e [newPath]",
                    "paramKeys": []
                }
            }
        },
        "/files/owner": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Change file owner",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileRoleUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path",
                        "user",
                        "group"
                    ],
                    "formatEN": "Change owner [paths] =\u003e [user]/[group]",
                    "formatZH": "修改用户/组 [paths] =\u003e [user]/[group]",
                    "paramKeys": []
                }
            }
        },
        "/files/read": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "File"
                ],
                "summary": "Read file by Line",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileReadByLineReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FileLineContent"
                        }
                    }
                }
            }
        },
        "/files/recycle/clear": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Clear Recycle Bin files",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "清空回收站",
                    "formatZH": "清空回收站",
                    "paramKeys": []
                }
            }
        },
        "/files/recycle/reduce": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Reduce Recycle Bin files",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RecycleBinReduce"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Reduce RecycleBin file [name]",
                    "formatZH": "还原回收站文件 [name]",
                    "paramKeys": []
                }
            }
        },
        "/files/recycle/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "List Recycle Bin files",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/files/recycle/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get Recycle Bin status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/rename": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Change file name",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileRename"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "oldName",
                        "newName"
                    ],
                    "formatEN": "Rename [oldName] =\u003e [newName]",
                    "formatZH": "重命名 [oldName] =\u003e [newName]",
                    "paramKeys": []
                }
            }
        },
        "/files/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Update file content",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Update file content [path]",
                    "formatZH": "更新文件内容 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "List files",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FileInfo"
                        }
                    }
                }
            }
        },
        "/files/size": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Load file size",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DirSizeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DirSizeRes"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Load file size [path]",
                    "formatZH": "获取文件夹大小 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/tree": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Load files tree",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.FileTree"
                            }
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "request",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "Upload file [path]",
                    "formatZH": "上传文件 [path]",
                    "paramKeys": []
                }
            }
        },
        "/files/upload/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Page file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SearchUploadWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/files/wget": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Wget file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileWget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FileWgetRes"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "url",
                        "path",
                        "name"
                    ],
                    "formatEN": "Download url =\u003e [path]/[name]",
                    "formatZH": "下载 url =\u003e [path]/[name]",
                    "paramKeys": []
                }
            }
        },
        "/groups": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Create system group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "create group [name][type]",
                    "formatZH": "创建组 [name][type]",
                    "paramKeys": []
                }
            }
        },
        "/groups/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Delete system group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "groups",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        },
                        {
                            "db": "groups",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "type",
                            "output_value": "type"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete group [type][name]",
                    "formatZH": "删除组 [type][name]",
                    "paramKeys": []
                }
            }
        },
        "/groups/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "List system groups",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GroupInfo"
                            }
                        }
                    }
                }
            }
        },
        "/groups/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Update system group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "update group [name][type]",
                    "formatZH": "更新组 [name][type]",
                    "paramKeys": []
                }
            }
        },
        "/host/conffile/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Update host SSH setting by file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SSHConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "update SSH conf",
                    "formatZH": "修改 SSH 配置文件",
                    "paramKeys": []
                }
            }
        },
        "/host/ssh/conf": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Load host SSH conf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/host/ssh/generate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Generate host SSH secret",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GenerateSSH"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "generate SSH secret",
                    "formatZH": "生成 SSH 密钥 ",
                    "paramKeys": []
                }
            }
        },
        "/host/ssh/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Load host SSH logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchSSHLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SSHLog"
                        }
                    }
                }
            }
        },
        "/host/ssh/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Operate SSH",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Operate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] SSH",
                    "formatZH": "[operation] SSH ",
                    "paramKeys": []
                }
            }
        },
        "/host/ssh/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Load host SSH setting info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SSHInfo"
                        }
                    }
                }
            }
        },
        "/host/ssh/secret": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Load host SSH secret",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GenerateLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/host/ssh/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Update host SSH setting",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SSHUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "update SSH setting [key] =\u003e [value]",
                    "formatZH": "修改 SSH 配置 [key] =\u003e [value]",
                    "paramKeys": []
                }
            }
        },
        "/host/tool": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Get tool status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HostToolReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.HostToolRes"
                        }
                    }
                }
            }
        },
        "/host/tool/config": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Get tool config",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HostToolConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.HostToolConfig"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operate"
                    ],
                    "formatEN": "[operate] tool config",
                    "formatZH": "[operate] 主机工具配置文件 ",
                    "paramKeys": []
                }
            }
        },
        "/host/tool/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Create Host tool Config",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HostToolCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "create [type] config",
                    "formatZH": "创建 [type] 配置",
                    "paramKeys": []
                }
            }
        },
        "/host/tool/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Get tool logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HostToolLogReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/host/tool/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Operate tool",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HostToolReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operate",
                        "type"
                    ],
                    "formatEN": "[operate] [type]",
                    "formatZH": "[operate] [type] ",
                    "paramKeys": []
                }
            }
        },
        "/host/tool/supervisor/process": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Get Supervisor process config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SupervisorProcessConfig"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Create Supervisor process",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SupervisorProcessConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operate"
                    ],
                    "formatEN": "[operate] process",
                    "formatZH": "[operate] 守护进程 ",
                    "paramKeys": []
                }
            }
        },
        "/host/tool/supervisor/process/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host tool"
                ],
                "summary": "Get Supervisor process config",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SupervisorProcessFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operate"
                    ],
                    "formatEN": "[operate] Supervisor Process Config file",
                    "formatZH": "[operate] Supervisor 进程文件 ",
                    "paramKeys": []
                }
            }
        },
        "/hosts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Create host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HostInfo"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "addr"
                    ],
                    "formatEN": "create host [name][addr]",
                    "formatZH": "创建主机 [name][addr]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/command": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Command"
                ],
                "summary": "List commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CommandInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Create command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommandOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "command"
                    ],
                    "formatEN": "create quick command [name][command]",
                    "formatZH": "创建快捷命令 [name][command]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/command/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Delete command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "commands",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete quick command [names]",
                    "formatZH": "删除快捷命令 [names]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/command/redis": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Redis Command"
                ],
                "summary": "List redis commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RedisCommand"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Redis Command"
                ],
                "summary": "Save redis command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "command"
                    ],
                    "formatEN": "save quick command for redis [name][command]",
                    "formatZH": "保存 redis 快捷命令 [name][command]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/command/redis/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Redis Command"
                ],
                "summary": "Delete redis command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "redis_commands",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete quick command of redis [names]",
                    "formatZH": "删除 redis 快捷命令 [names]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/command/redis/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Redis Command"
                ],
                "summary": "Page redis commands",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/hosts/command/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Page commands",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/hosts/command/tree": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Tree commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CommandTree"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/command/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Update command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommandOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "update quick command [name]",
                    "formatZH": "更新快捷命令 [name]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Delete host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "hosts",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "addr",
                            "output_value": "addrs"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete host [addrs]",
                    "formatZH": "删除主机 [addrs]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/firewall/base": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Load firewall base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FirewallBaseInfo"
                        }
                    }
                }
            }
        },
        "/hosts/firewall/batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Batch create group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchRuleOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/hosts/firewall/forward": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Update firewall port group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ForwardRuleOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "source_port"
                    ],
                    "formatEN": "update port forward rules [source_port]",
                    "formatZH": "更新端口转发规则 [source_port]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/firewall/ip": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Create firewall group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddrRuleOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "strategy",
                        "address"
                    ],
                    "formatEN": "create address rules [strategy][address]",
                    "formatZH": "添加 ip 规则 [strategy] [address]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/firewall/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Page firewall status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FirewallOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] firewall",
                    "formatZH": "[operation] 防火墙",
                    "paramKeys": []
                }
            }
        },
        "/hosts/firewall/port": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Create firewall port group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PortRuleOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "port",
                        "strategy"
                    ],
                    "formatEN": "create port rules [strategy][port]",
                    "formatZH": "添加端口规则 [strategy] [port]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/firewall/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Page firewall rules",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RuleSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/hosts/firewall/update/addr": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Update address group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddrRuleUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/hosts/firewall/update/description": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Update rule description",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFirewallDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/hosts/firewall/update/port": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Firewall"
                ],
                "summary": "Update firewall group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PortRuleUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/hosts/monitor/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Monitor"
                ],
                "summary": "Clean monitor datas",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "clean monitor datas",
                    "formatZH": "清空监控数据",
                    "paramKeys": []
                }
            }
        },
        "/hosts/monitor/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Monitor"
                ],
                "summary": "Load monitor datas",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MonitorSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.MonitorData"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Page host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchHostWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/hosts/test/byid/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Test host conn by host id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/hosts/test/byinfo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Test host conn by info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostConnTest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/hosts/tree": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Load host tree",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchForTree"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HostTree"
                            }
                        }
                    }
                }
            }
        },
        "/hosts/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Update host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "addr"
                    ],
                    "formatEN": "update host [name][addr]",
                    "formatZH": "更新主机信息 [name][addr]",
                    "paramKeys": []
                }
            }
        },
        "/hosts/update/group": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Update host group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeHostGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "hosts",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "addr",
                            "output_value": "addr"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "group"
                    ],
                    "formatEN": "change host [addr] group =\u003e [group]",
                    "formatZH": "切换主机[addr]分组 =\u003e [group]",
                    "paramKeys": []
                }
            }
        },
        "/logs/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Clean operation logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CleanLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "logType"
                    ],
                    "formatEN": "Clean the [logType] log information",
                    "formatZH": "清空 [logType] 日志信息",
                    "paramKeys": []
                }
            }
        },
        "/logs/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Page login logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchLgLogWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/logs/operation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Page operation logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchOpLogWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/logs/system": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Load system logs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logs/system/files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Load system log files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/openresty": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Load OpenResty conf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NginxFile"
                        }
                    }
                }
            }
        },
        "/openresty/clear": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Clear OpenResty proxy cache",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Clear nginx proxy cache",
                    "formatZH": "清理 Openresty 代理缓存",
                    "paramKeys": []
                }
            }
        },
        "/openresty/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Update OpenResty conf by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxConfigFileUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Update nginx conf",
                    "formatZH": "更新 nginx 配置",
                    "paramKeys": []
                }
            }
        },
        "/openresty/scope": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Load partial OpenResty conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxScopeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.NginxParam"
                            }
                        }
                    }
                }
            }
        },
        "/openresty/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Load OpenResty status info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NginxStatus"
                        }
                    }
                }
            }
        },
        "/openresty/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "OpenResty"
                ],
                "summary": "Update OpenResty conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteId",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteId"
                    ],
                    "formatEN": "Update nginx conf [domain]",
                    "formatZH": "更新 nginx 配置 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/process/stop": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Process"
                ],
                "summary": "Stop Process",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ProcessReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "PID"
                    ],
                    "formatEN": "结束进程 [PID]",
                    "formatZH": "结束进程 [PID]",
                    "paramKeys": []
                }
            }
        },
        "/runtimes": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Create runtime",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RuntimeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Runtime"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Create runtime [name]",
                    "formatZH": "创建运行环境 [name]",
                    "paramKeys": []
                }
            }
        },
        "/runtimes/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Delete runtime",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RuntimeDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete runtime [name]",
                    "formatZH": "删除运行环境 [name]",
                    "paramKeys": []
                }
            }
        },
        "/runtimes/node/modules": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Get Node modules",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NodeModuleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.NodeModule"
                            }
                        }
                    }
                }
            }
        },
        "/runtimes/node/modules/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Operate Node modules",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NodeModuleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runtimes/node/package": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Get Node package scripts",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NodePackageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PackageScripts"
                            }
                        }
                    }
                }
            }
        },
        "/runtimes/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Operate runtime",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RuntimeOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Operate runtime [name]",
                    "formatZH": "操作运行环境 [name]",
                    "paramKeys": []
                }
            }
        },
        "/runtimes/php/extensions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PHP Extensions"
                ],
                "summary": "Create Extensions",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PHPExtensionsCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runtimes/php/extensions/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PHP Extensions"
                ],
                "summary": "Delete Extensions",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PHPExtensionsDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runtimes/php/extensions/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PHP Extensions"
                ],
                "summary": "Page Extensions",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PHPExtensionsSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.PHPExtensionsDTO"
                            }
                        }
                    }
                }
            }
        },
        "/runtimes/php/extensions/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PHP Extensions"
                ],
                "summary": "Update Extensions",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PHPExtensionsUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runtimes/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "List runtimes",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RuntimeSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/runtimes/sync": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Sync runtime status",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runtimes/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Update runtime",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RuntimeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Update runtime [name]",
                    "formatZH": "更新运行环境 [name]",
                    "paramKeys": []
                }
            }
        },
        "/runtimes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Runtime"
                ],
                "summary": "Get runtime",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RuntimeDTO"
                        }
                    }
                }
            }
        },
        "/settings/api/config/generate/key": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Generate api key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "generate api key",
                    "formatZH": "生成 API 接口密钥",
                    "paramKeys": []
                }
            }
        },
        "/settings/api/config/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update api config",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ApiInterfaceConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "ipWhiteList"
                    ],
                    "formatEN": "update api config =\u003e IP White List: [ipWhiteList]",
                    "formatZH": "更新 API 接口配置 =\u003e IP 白名单: [ipWhiteList]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Create backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "create backup account [type]",
                    "formatZH": "创建备份账号 [type]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/backup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Backup system data",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommonBackup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type",
                        "name",
                        "detailName"
                    ],
                    "formatEN": "backup [type] data [name][detailName]",
                    "formatZH": "备份 [type] 数据 [name][detailName]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Delete backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "backup_accounts",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "type",
                            "output_value": "types"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete backup account [types]",
                    "formatZH": "删除备份账号 [types]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/onedrive": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Load OneDrive info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OneDriveInfo"
                        }
                    }
                }
            }
        },
        "/settings/backup/record/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Delete backup record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "backup_records",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "file_name",
                            "output_value": "files"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete backup records [files]",
                    "formatZH": "删除备份记录 [files]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/record/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Download backup record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DownloadRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "source",
                        "fileName"
                    ],
                    "formatEN": "download backup records [source][fileName]",
                    "formatZH": "下载备份记录 [source][fileName]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/record/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Page backup records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecordSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/settings/backup/record/search/bycronjob": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Page backup records by cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecordSearchByCronjob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/settings/backup/record/size": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Load backup records size",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecordSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BackupFile"
                            }
                        }
                    }
                }
            }
        },
        "/settings/backup/record/size/bycronjob": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Load backup records size for cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecordSearchByCronjob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BackupFile"
                            }
                        }
                    }
                }
            }
        },
        "/settings/backup/recover": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Recover system data",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommonRecover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type",
                        "name",
                        "detailName",
                        "file"
                    ],
                    "formatEN": "recover [type] data [name][detailName] from [file]",
                    "formatZH": "从 [file] 恢复 [type] 数据 [name][detailName]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/recover/byupload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Recover system data by upload",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommonRecover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type",
                        "name",
                        "detailName",
                        "file"
                    ],
                    "formatEN": "recover [type] data [name][detailName] from [file]",
                    "formatZH": "从 [file] 恢复 [type] 数据 [name][detailName]",
                    "paramKeys": []
                }
            }
        },
        "/settings/backup/refresh/onedrive": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Refresh OneDrive token",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/settings/backup/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "List backup accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BackupInfo"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "List buckets",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ForBuckets"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/settings/backup/search/files": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "List files from backup accounts",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupSearchFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/backup/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Update backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "update backup account [types]",
                    "formatZH": "更新备份账号 [types]",
                    "paramKeys": []
                }
            }
        },
        "/settings/basedir": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load local base dir",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/settings/bind/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system bind info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BindInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "ipv6",
                        "bindAddress"
                    ],
                    "formatEN": "update system bind info =\u003e ipv6: [ipv6], 监听 IP: [bindAddress]",
                    "formatZH": "修改系统监听信息 =\u003e ipv6: [ipv6], 监听 IP: [bindAddress]",
                    "paramKeys": []
                }
            }
        },
        "/settings/expired/handle": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Reset system password expired",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "reset an expired Password",
                    "formatZH": "重置过期密码",
                    "paramKeys": []
                }
            }
        },
        "/settings/interface": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load system address",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/menu/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system setting",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SettingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Hide advanced feature menu.",
                    "formatZH": "隐藏高级功能菜单",
                    "paramKeys": []
                }
            }
        },
        "/settings/mfa": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load mfa info",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MfaCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mfa.Otp"
                        }
                    }
                }
            }
        },
        "/settings/mfa/bind": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Bind mfa",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MfaCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "bind mfa",
                    "formatZH": "mfa 绑定",
                    "paramKeys": []
                }
            }
        },
        "/settings/password/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "update system password",
                    "formatZH": "修改系统密码",
                    "paramKeys": []
                }
            }
        },
        "/settings/port/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system port",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PortUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "serverPort"
                    ],
                    "formatEN": "update system port =\u003e [serverPort]",
                    "formatZH": "修改系统端口 =\u003e [serverPort]",
                    "paramKeys": []
                }
            }
        },
        "/settings/proxy/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update proxy setting",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProxyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "proxyUrl",
                        "proxyPort"
                    ],
                    "formatEN": "set proxy [proxyPort]:[proxyPort].",
                    "formatZH": "服务器代理配置 [proxyPort]:[proxyPort]",
                    "paramKeys": []
                }
            }
        },
        "/settings/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load system setting info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SettingInfo"
                        }
                    }
                }
            }
        },
        "/settings/search/available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load system available status",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/settings/snapshot": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Create system snapshot",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "from",
                        "description"
                    ],
                    "formatEN": "Create system backup [description] to [from]",
                    "formatZH": "创建系统快照 [description] 到 [from]",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Delete system backup",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotBatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "snapshots",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "Delete system backup [name]",
                    "formatZH": "删除系统快照 [name]",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/description/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update snapshot description",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "snapshots",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "description"
                    ],
                    "formatEN": "The description of the snapshot [name] is modified =\u003e [description]",
                    "formatZH": "快照 [name] 描述信息修改 [description]",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/import": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Import system snapshot",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "from",
                        "names"
                    ],
                    "formatEN": "Sync system snapshots [names] from [from]",
                    "formatZH": "从 [from] 同步系统快照 [names]",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/recover": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Recover system backup",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotRecover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "snapshots",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Recover from system backup [name]",
                    "formatZH": "从系统快照 [name] 恢复",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/rollback": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Rollback system backup",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotRecover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "snapshots",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Rollback from system backup [name]",
                    "formatZH": "从系统快照 [name] 回滚",
                    "paramKeys": []
                }
            }
        },
        "/settings/snapshot/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Page system snapshot",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageSnapshot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/settings/snapshot/size": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load system snapshot size",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageSnapshot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SnapshotFile"
                            }
                        }
                    }
                }
            }
        },
        "/settings/snapshot/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load Snapshot status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SnapshotStatus"
                        }
                    }
                }
            }
        },
        "/settings/ssl/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Download system cert",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/settings/ssl/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load system cert info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SSLInfo"
                        }
                    }
                }
            }
        },
        "/settings/ssl/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SSLUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "ssl"
                    ],
                    "formatEN": "update system ssl =\u003e [ssl]",
                    "formatZH": "修改系统 ssl =\u003e [ssl]",
                    "paramKeys": []
                }
            }
        },
        "/settings/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Update system setting",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SettingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "update system setting [key] =\u003e [value]",
                    "formatZH": "修改系统配置 [key] =\u003e [value]",
                    "paramKeys": []
                }
            }
        },
        "/settings/upgrade": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Load release notes by version",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Upgrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Setting"
                ],
                "summary": "Upgrade",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Upgrade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "version"
                    ],
                    "formatEN": "upgrade system =\u003e [version]",
                    "formatZH": "更新系统 =\u003e [version]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Create clam",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "path"
                    ],
                    "formatEN": "create clam [name][path]",
                    "formatZH": "创建扫描规则 [name][path]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/base": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Load clam base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ClamBaseInfo"
                        }
                    }
                }
            }
        },
        "/toolbox/clam/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Delete clam",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "clams",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete clam [names]",
                    "formatZH": "删除扫描规则 [names]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/file/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Load clam file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/toolbox/clam/file/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Update clam file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateByNameAndFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toolbox/clam/handle": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Handle clam scan",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "clams",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "handle clam scan [name]",
                    "formatZH": "执行病毒扫描 [name]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Operate Clam",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Operate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] FTP",
                    "formatZH": "[operation] Clam",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/record/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Clean clam record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "clams",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "clean clam record [name]",
                    "formatZH": "清空扫描报告 [name]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/record/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Load clam record detail",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamLogReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/toolbox/clam/record/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Page clam record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamLogSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/toolbox/clam/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Page clam",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchClamWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/toolbox/clam/status/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Update clam status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamUpdateStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "clams",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "status"
                    ],
                    "formatEN": "change the status of clam [name] to [status].",
                    "formatZH": "修改扫描规则 [name] 状态为 [status]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clam/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Clam"
                ],
                "summary": "Update clam",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClamUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "path"
                    ],
                    "formatEN": "update clam [name][path]",
                    "formatZH": "修改扫描规则 [name][path]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/clean": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Clean system",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Clean"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "Clean system junk files",
                    "formatZH": "清理系统垃圾文件",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/device/base": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Load device base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeviceBaseInfo"
                        }
                    }
                }
            }
        },
        "/toolbox/device/check/dns": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Check device DNS conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SettingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/toolbox/device/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "load conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperationWithName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/toolbox/device/update/byconf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update device conf by file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateByNameAndFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toolbox/device/update/conf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update device",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SettingUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "update device conf [key] =\u003e [value]",
                    "formatZH": "修改主机参数 [key] =\u003e [value]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/device/update/host": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update device hosts",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "update device host [key] =\u003e [value]",
                    "formatZH": "修改主机 Host [key] =\u003e [value]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/device/update/passwd": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update device passwd",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toolbox/device/update/swap": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Update device swap",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SwapHelper"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operate",
                        "path"
                    ],
                    "formatEN": "[operate] device swap [path]",
                    "formatZH": "[operate] 主机 swap [path]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/device/zone/options": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "list time zone options",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/toolbox/fail2ban/base": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Load fail2ban base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Fail2BanBaseInfo"
                        }
                    }
                }
            }
        },
        "/toolbox/fail2ban/load/conf": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Load fail2ban conf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/toolbox/fail2ban/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Operate fail2ban",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Operate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] Fail2ban",
                    "formatZH": "[operation] Fail2ban",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/fail2ban/operate/sshd": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Operate sshd of fail2ban",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Operate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toolbox/fail2ban/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Page fail2ban ip list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Fail2BanSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/toolbox/fail2ban/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Update fail2ban conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Fail2BanUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "key",
                        "value"
                    ],
                    "formatEN": "update fail2ban conf [key] =\u003e [value]",
                    "formatZH": "修改 Fail2ban 配置 [key] =\u003e [value]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/fail2ban/update/byconf": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fail2ban"
                ],
                "summary": "Update fail2ban conf by file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/toolbox/ftp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Create FTP user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FtpCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "user",
                        "path"
                    ],
                    "formatEN": "create FTP [user][path]",
                    "formatZH": "创建 FTP 账户 [user][path]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/ftp/base": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Load FTP base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FtpBaseInfo"
                        }
                    }
                }
            }
        },
        "/toolbox/ftp/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Delete FTP user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "ftps",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "user",
                            "output_value": "users"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete FTP users [users]",
                    "formatZH": "删除 FTP 账户 [users]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/ftp/log/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Load FTP operation log",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FtpLogSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/toolbox/ftp/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Operate FTP",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Operate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] FTP",
                    "formatZH": "[operation] FTP",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/ftp/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Page FTP user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/toolbox/ftp/sync": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Sync FTP user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "sync FTP users",
                    "formatZH": "同步 FTP 账户",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/ftp/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "FTP"
                ],
                "summary": "Update FTP user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FtpUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "user",
                        "path"
                    ],
                    "formatEN": "update FTP [user][path]",
                    "formatZH": "修改 FTP 账户 [user][path]",
                    "paramKeys": []
                }
            }
        },
        "/toolbox/scan": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Scan system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CleanData"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [],
                    "formatEN": "scan System Junk Files",
                    "formatZH": "扫描系统垃圾文件",
                    "paramKeys": []
                }
            }
        },
        "/websites": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Create website",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "primaryDomain"
                    ],
                    "formatEN": "Create website [primaryDomain]",
                    "formatZH": "创建网站 [primaryDomain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/acme": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Acme"
                ],
                "summary": "Create website acme account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteAcmeAccountCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteAcmeAccountDTO"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "email"
                    ],
                    "formatEN": "Create website acme [email]",
                    "formatZH": "创建网站 acme [email]",
                    "paramKeys": []
                }
            }
        },
        "/websites/acme/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Acme"
                ],
                "summary": "Delete website acme account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_acme_accounts",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "email",
                            "output_value": "email"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete website acme [email]",
                    "formatZH": "删除网站 acme [email]",
                    "paramKeys": []
                }
            }
        },
        "/websites/acme/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Acme"
                ],
                "summary": "Page website acme accounts",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/websites/auths": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get AuthBasic conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxAuthReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NginxAuthRes"
                        }
                    }
                }
            }
        },
        "/websites/auths/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get AuthBasic conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxAuthUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/websites/ca": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Create website ca",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCACreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCACreate"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Create website ca [name]",
                    "formatZH": "创建网站 ca [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ca/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Delete website ca",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCommonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_cas",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete website ca [name]",
                    "formatZH": "删除网站 ca [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ca/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Download CA file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_cas",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "download ca file [name]",
                    "formatZH": "下载 CA 证书文件 [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ca/obtain": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Obtain SSL",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCAObtain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_cas",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Obtain SSL [name]",
                    "formatZH": "自签 SSL 证书 [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ca/renew": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Renew Obtain SSL",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCAObtain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_cas",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Obtain SSL [name]",
                    "formatZH": "自签 SSL 证书 [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ca/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Page website ca",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCASearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/websites/ca/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website CA"
                ],
                "summary": "Get website ca",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteCADTO"
                        }
                    }
                }
            }
        },
        "/websites/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Check before create website",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteInstallCheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.WebsitePreInstallCheck"
                            }
                        }
                    }
                }
            }
        },
        "/websites/config": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Nginx"
                ],
                "summary": "Load nginx conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxScopeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteNginxConfig"
                        }
                    }
                }
            }
        },
        "/websites/config/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Nginx"
                ],
                "summary": "Update nginx conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteId",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteId"
                    ],
                    "formatEN": "Nginx conf update [domain]",
                    "formatZH": "nginx 配置修改 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/default/html/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update default html",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteHtmlUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "Update default html",
                    "formatZH": "更新默认 html",
                    "paramKeys": []
                }
            }
        },
        "/websites/default/html/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get default html",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteHtmlRes"
                        }
                    }
                }
            }
        },
        "/websites/default/server": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Change default server",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDefaultUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "operate"
                    ],
                    "formatEN": "Change default server =\u003e [domain]",
                    "formatZH": "修改默认 server =\u003e [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Delete website",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete website [domain]",
                    "formatZH": "删除网站 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/dir": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get website dir",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteCommonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteDirConfig"
                        }
                    }
                }
            }
        },
        "/websites/dir/permission": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update Site Dir permission",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteUpdateDirPermission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update  domain [domain] dir permission",
                    "formatZH": "更新网站 [domain] 目录权限",
                    "paramKeys": []
                }
            }
        },
        "/websites/dir/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update Site Dir",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteUpdateDir"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update  domain [domain] dir",
                    "formatZH": "更新网站 [domain] 目录",
                    "paramKeys": []
                }
            }
        },
        "/websites/dns": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website DNS"
                ],
                "summary": "Create website dns account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDnsAccountCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Create website dns [name]",
                    "formatZH": "创建网站 dns [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/dns/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website DNS"
                ],
                "summary": "Delete website dns account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_dns_accounts",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete website dns [name]",
                    "formatZH": "删除网站 dns [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/dns/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website DNS"
                ],
                "summary": "Page website dns accounts",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/websites/dns/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website DNS"
                ],
                "summary": "Update website dns account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDnsAccountUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "Update website dns [name]",
                    "formatZH": "更新网站 dns [name]",
                    "paramKeys": []
                }
            }
        },
        "/websites/domains": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Domain"
                ],
                "summary": "Create website domain",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDomainCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.WebsiteDomain"
                            }
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "domain"
                    ],
                    "formatEN": "Create domain [domain]",
                    "formatZH": "创建域名 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/domains/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Domain"
                ],
                "summary": "Delete website domain",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDomainDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_domains",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Delete domain [domain]",
                    "formatZH": "删除域名 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/domains/{websiteId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Domain"
                ],
                "summary": "Search website domains by websiteId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "websiteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.WebsiteDomain"
                            }
                        }
                    }
                }
            }
        },
        "/websites/leech": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get AntiLeech conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxCommonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NginxAntiLeechRes"
                        }
                    }
                }
            }
        },
        "/websites/leech/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update AntiLeech conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxAntiLeechUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/websites/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Website"
                ],
                "summary": "List websites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.WebsiteDTO"
                            }
                        }
                    }
                }
            }
        },
        "/websites/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Operate website log",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteLogReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteLog"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "operate"
                    ],
                    "formatEN": "[domain][operate] logs",
                    "formatZH": "[domain][operate] 日志",
                    "paramKeys": []
                }
            }
        },
        "/websites/nginx/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Nginx"
                ],
                "summary": "Update website nginx conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteNginxUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "[domain] Nginx conf update",
                    "formatZH": "[domain] Nginx 配置修改",
                    "paramKeys": []
                }
            }
        },
        "/websites/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Operate website",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteOp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "operate"
                    ],
                    "formatEN": "[operate] website [domain]",
                    "formatZH": "[operate] 网站 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/options": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "tags": [
                    "Website"
                ],
                "summary": "List website names",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.WebsiteOption"
                            }
                        }
                    }
                }
            }
        },
        "/websites/php/config": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website PHP"
                ],
                "summary": "Update website php conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsitePHPConfigUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "[domain] PHP conf update",
                    "formatZH": "[domain] PHP 配置修改",
                    "paramKeys": []
                }
            }
        },
        "/websites/php/config/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Load website php conf",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PHPConfig"
                        }
                    }
                }
            }
        },
        "/websites/php/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website PHP"
                ],
                "summary": "Update php conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsitePHPFileUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteId",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteId"
                    ],
                    "formatEN": "Nginx conf update [domain]",
                    "formatZH": "php 配置修改 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/php/version": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website PHP"
                ],
                "summary": "Update php version",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsitePHPVersionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteId",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteId"
                    ],
                    "formatEN": "php version update [domain]",
                    "formatZH": "php 版本变更 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/proxies": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get proxy conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteProxyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/request.WebsiteProxyConfig"
                            }
                        }
                    }
                }
            }
        },
        "/websites/proxies/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update proxy conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteProxyConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update domain [domain] proxy config",
                    "formatZH": "修改网站 [domain] 反向代理配置 ",
                    "paramKeys": []
                }
            }
        },
        "/websites/proxy/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update proxy file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxProxyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteID",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteID"
                    ],
                    "formatEN": "Nginx conf proxy file update [domain]",
                    "formatZH": "更新反向代理文件 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/redirect": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get redirect conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteProxyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.NginxRedirectConfig"
                            }
                        }
                    }
                }
            }
        },
        "/websites/redirect/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update redirect file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxRedirectUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteID",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteID"
                    ],
                    "formatEN": "Nginx conf redirect file update [domain]",
                    "formatZH": "更新重定向文件 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/redirect/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update redirect conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxRedirectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteID",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteID"
                    ],
                    "formatEN": "Update domain [domain] redirect config",
                    "formatZH": "修改网站 [domain] 重定向理配置 ",
                    "paramKeys": []
                }
            }
        },
        "/websites/rewrite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Get rewrite conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxRewriteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.NginxRewriteRes"
                        }
                    }
                }
            }
        },
        "/websites/rewrite/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update rewrite conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NginxRewriteUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteID",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteID"
                    ],
                    "formatEN": "Nginx conf rewrite update [domain]",
                    "formatZH": "伪静态配置修改 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Page websites",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/websites/ssl": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Create website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLCreate"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "primaryDomain"
                    ],
                    "formatEN": "Create website ssl [primaryDomain]",
                    "formatZH": "创建网站 ssl [primaryDomain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Delete website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteBatchDelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_ssls",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "Delete ssl [domain]",
                    "formatZH": "删除 ssl [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Download SSL file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_ssls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "download ssl file [domain]",
                    "formatZH": "下载证书文件 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/obtain": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Apply  ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLApply"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_ssls",
                            "input_column": "id",
                            "input_value": "ID",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "ID"
                    ],
                    "formatEN": "apply ssl [domain]",
                    "formatZH": "申请证书  [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/resolve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Resolve website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteDNSReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.WebsiteDNSRes"
                            }
                        }
                    }
                }
            }
        },
        "/websites/ssl/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Page website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.WebsiteSSLDTO"
                            }
                        }
                    }
                }
            }
        },
        "/websites/ssl/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Update Website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "website_ssls",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update ssl config [domain]",
                    "formatZH": "更新证书设置 [domain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Upload Website ssl",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteSSLUpload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "Upload ssl [type]",
                    "formatZH": "上传 ssl [type]",
                    "paramKeys": []
                }
            }
        },
        "/websites/ssl/website/{websiteId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Search website ssl by website id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "websiteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteSSLDTO"
                        }
                    }
                }
            }
        },
        "/websites/ssl/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website SSL"
                ],
                "summary": "Search website ssl by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteSSLDTO"
                        }
                    }
                }
            }
        },
        "/websites/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Update website",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "primaryDomain"
                    ],
                    "formatEN": "Update website [primaryDomain]",
                    "formatZH": "更新网站 [primaryDomain]",
                    "paramKeys": []
                }
            }
        },
        "/websites/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website"
                ],
                "summary": "Search website by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteDTO"
                        }
                    }
                }
            }
        },
        "/websites/{id}/config/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website Nginx"
                ],
                "summary": "Search website nginx by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.FileInfo"
                        }
                    }
                }
            }
        },
        "/websites/{id}/https": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website HTTPS"
                ],
                "summary": "Load https conf",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteHTTPS"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Timestamp": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Website HTTPS"
                ],
                "summary": "Update https conf",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WebsiteHTTPSOp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebsiteHTTPS"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "websites",
                            "input_column": "id",
                            "input_value": "websiteId",
                            "isList": false,
                            "output_column": "primary_domain",
                            "output_value": "domain"
                        }
                    ],
                    "bodyKeys": [
                        "websiteId"
                    ],
                    "formatEN": "Update website https [domain] conf",
                    "formatZH": "更新网站 [domain] https 配置",
                    "paramKeys": []
                }
            }
        }
    },
    "definitions": {
        "dto.AddrRuleOperate": {
            "type": "object",
            "required": [
                "address",
                "operation",
                "strategy"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove"
                    ]
                },
                "strategy": {
                    "type": "string",
                    "enum": [
                        "accept",
                        "drop"
                    ]
                }
            }
        },
        "dto.AddrRuleUpdate": {
            "type": "object",
            "properties": {
                "newRule": {
                    "$ref": "#/definitions/dto.AddrRuleOperate"
                },
                "oldRule": {
                    "$ref": "#/definitions/dto.AddrRuleOperate"
                }
            }
        },
        "dto.ApiInterfaceConfig": {
            "type": "object",
            "properties": {
                "apiInterfaceStatus": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiKeyValidityTime": {
                    "type": "string"
                },
                "ipWhiteList": {
                    "type": "string"
                }
            }
        },
        "dto.AppConfigVersion": {
            "type": "object",
            "properties": {
                "additionalProperties": {},
                "downloadCallBackUrl": {
                    "type": "string"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.AppDefine": {
            "type": "object",
            "properties": {
                "additionalProperties": {
                    "$ref": "#/definitions/dto.AppProperty"
                },
                "icon": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "readMe": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AppConfigVersion"
                    }
                }
            }
        },
        "dto.AppInstallInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.AppList": {
            "type": "object",
            "properties": {
                "additionalProperties": {
                    "$ref": "#/definitions/dto.ExtraProperties"
                },
                "apps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AppDefine"
                    }
                },
                "lastModified": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                },
                "violations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.AppProperty": {
            "type": "object",
            "properties": {
                "Required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "crossVersionUpdate": {
                    "type": "boolean"
                },
                "document": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "recommend": {
                    "type": "integer"
                },
                "shortDescEn": {
                    "type": "string"
                },
                "shortDescZh": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.AppResource": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.AppVersion": {
            "type": "object",
            "properties": {
                "detailId": {
                    "type": "integer"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.BackupFile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.BackupInfo": {
            "type": "object",
            "properties": {
                "backupPath": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vars": {
                    "type": "string"
                }
            }
        },
        "dto.BackupOperate": {
            "type": "object",
            "required": [
                "type",
                "vars"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "credential": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vars": {
                    "type": "string"
                }
            }
        },
        "dto.BackupSearchFile": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.BatchDelete": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "force": {
                    "type": "boolean"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.BatchDeleteReq": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.BatchRuleOperate": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PortRuleOperate"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.BindInfo": {
            "type": "object",
            "required": [
                "bindAddress",
                "ipv6"
            ],
            "properties": {
                "bindAddress": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            }
        },
        "dto.BindUser": {
            "type": "object",
            "required": [
                "database",
                "db",
                "password",
                "permission",
                "username"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "db": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.CaptchaResponse": {
            "type": "object",
            "properties": {
                "captchaID": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string"
                }
            }
        },
        "dto.ChangeDBInfo": {
            "type": "object",
            "required": [
                "database",
                "from",
                "type",
                "value"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb",
                        "postgresql"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.ChangeHostGroup": {
            "type": "object",
            "required": [
                "groupID",
                "id"
            ],
            "properties": {
                "groupID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.ChangePasswd": {
            "type": "object",
            "properties": {
                "passwd": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.ChangeRedisPass": {
            "type": "object",
            "required": [
                "database"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.ClamBaseInfo": {
            "type": "object",
            "properties": {
                "freshIsActive": {
                    "type": "boolean"
                },
                "freshIsExist": {
                    "type": "boolean"
                },
                "freshVersion": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isExist": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ClamCreate": {
            "type": "object",
            "properties": {
                "alertCount": {
                    "type": "integer"
                },
                "alertTitle": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "infectedDir": {
                    "type": "string"
                },
                "infectedStrategy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "spec": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.ClamDelete": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "removeInfected": {
                    "type": "boolean"
                },
                "removeRecord": {
                    "type": "boolean"
                }
            }
        },
        "dto.ClamFileReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "tail": {
                    "type": "string"
                }
            }
        },
        "dto.ClamLogReq": {
            "type": "object",
            "properties": {
                "clamName": {
                    "type": "string"
                },
                "recordName": {
                    "type": "string"
                },
                "tail": {
                    "type": "string"
                }
            }
        },
        "dto.ClamLogSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "clamID": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "dto.ClamUpdate": {
            "type": "object",
            "properties": {
                "alertCount": {
                    "type": "integer"
                },
                "alertTitle": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "infectedDir": {
                    "type": "string"
                },
                "infectedStrategy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "spec": {
                    "type": "string"
                }
            }
        },
        "dto.ClamUpdateStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.Clean": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "treeType": {
                    "type": "string"
                }
            }
        },
        "dto.CleanData": {
            "type": "object",
            "properties": {
                "containerClean": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                },
                "downloadClean": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                },
                "systemClean": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                },
                "systemLogClean": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                },
                "uploadClean": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                }
            }
        },
        "dto.CleanLog": {
            "type": "object",
            "required": [
                "logType"
            ],
            "properties": {
                "logType": {
                    "type": "string",
                    "enum": [
                        "login",
                        "operation"
                    ]
                }
            }
        },
        "dto.CleanTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CleanTree"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isCheck": {
                    "type": "boolean"
                },
                "isRecommend": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.CommandInfo": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "groupBelong": {
                    "type": "string"
                },
                "groupID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CommandOperate": {
            "type": "object",
            "required": [
                "command",
                "name"
            ],
            "properties": {
                "command": {
                    "type": "string"
                },
                "groupBelong": {
                    "type": "string"
                },
                "groupID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CommandTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CommandInfo"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.CommonBackup": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "detailName": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "app",
                        "mysql",
                        "mariadb",
                        "redis",
                        "website",
                        "postgresql"
                    ]
                }
            }
        },
        "dto.CommonRecover": {
            "type": "object",
            "required": [
                "source",
                "type"
            ],
            "properties": {
                "detailName": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "OSS",
                        "S3",
                        "SFTP",
                        "MINIO",
                        "LOCAL",
                        "COS",
                        "KODO",
                        "OneDrive",
                        "WebDAV"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "app",
                        "mysql",
                        "mariadb",
                        "redis",
                        "website",
                        "postgresql"
                    ]
                }
            }
        },
        "dto.ComposeCreate": {
            "type": "object",
            "required": [
                "from"
            ],
            "properties": {
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "edit",
                        "path",
                        "template"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "template": {
                    "type": "integer"
                }
            }
        },
        "dto.ComposeOperation": {
            "type": "object",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "up",
                        "start",
                        "stop",
                        "down",
                        "delete"
                    ]
                },
                "path": {
                    "type": "string"
                },
                "withFile": {
                    "type": "boolean"
                }
            }
        },
        "dto.ComposeTemplateCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ComposeTemplateInfo": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ComposeTemplateUpdate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.ComposeUpdate": {
            "type": "object",
            "required": [
                "content",
                "name",
                "path"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerCommit": {
            "type": "object",
            "required": [
                "containerID"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "containerID": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "newImageName": {
                    "type": "string"
                },
                "pause": {
                    "type": "boolean"
                }
            }
        },
        "dto.ContainerListStats": {
            "type": "object",
            "properties": {
                "containerID": {
                    "type": "string"
                },
                "cpuPercent": {
                    "type": "number"
                },
                "cpuTotalUsage": {
                    "type": "integer"
                },
                "memoryCache": {
                    "type": "integer"
                },
                "memoryLimit": {
                    "type": "integer"
                },
                "memoryPercent": {
                    "type": "number"
                },
                "memoryUsage": {
                    "type": "integer"
                },
                "percpuUsage": {
                    "type": "integer"
                },
                "systemUsage": {
                    "type": "integer"
                }
            }
        },
        "dto.ContainerLog": {
            "type": "object",
            "required": [
                "container"
            ],
            "properties": {
                "container": {
                    "type": "string"
                },
                "containerType": {
                    "type": "string"
                },
                "since": {
                    "type": "string"
                },
                "tail": {
                    "type": "integer"
                }
            }
        },
        "dto.ContainerOperate": {
            "type": "object",
            "required": [
                "image",
                "name"
            ],
            "properties": {
                "autoRemove": {
                    "type": "boolean"
                },
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "containerID": {
                    "type": "string"
                },
                "cpuShares": {
                    "type": "integer"
                },
                "entrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exposedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PortHelper"
                    }
                },
                "forcePull": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memory": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "nanoCPUs": {
                    "type": "number"
                },
                "network": {
                    "type": "string"
                },
                "openStdin": {
                    "type": "boolean"
                },
                "privileged": {
                    "type": "boolean"
                },
                "publishAllPorts": {
                    "type": "boolean"
                },
                "restartPolicy": {
                    "type": "string"
                },
                "tty": {
                    "type": "boolean"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.VolumeHelper"
                    }
                }
            }
        },
        "dto.ContainerOperation": {
            "type": "object",
            "required": [
                "names",
                "operation"
            ],
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "up",
                        "start",
                        "stop",
                        "restart",
                        "kill",
                        "pause",
                        "unpause",
                        "remove"
                    ]
                }
            }
        },
        "dto.ContainerPrune": {
            "type": "object",
            "required": [
                "pruneType"
            ],
            "properties": {
                "pruneType": {
                    "type": "string",
                    "enum": [
                        "container",
                        "image",
                        "volume",
                        "network",
                        "buildcache"
                    ]
                },
                "withTagAll": {
                    "type": "boolean"
                }
            }
        },
        "dto.ContainerPruneReport": {
            "type": "object",
            "properties": {
                "deletedNumber": {
                    "type": "integer"
                },
                "spaceReclaimed": {
                    "type": "integer"
                }
            }
        },
        "dto.ContainerRename": {
            "type": "object",
            "required": [
                "name",
                "newName"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "newName": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerStats": {
            "type": "object",
            "properties": {
                "cache": {
                    "type": "number"
                },
                "cpuPercent": {
                    "type": "number"
                },
                "ioRead": {
                    "type": "number"
                },
                "ioWrite": {
                    "type": "number"
                },
                "memory": {
                    "type": "number"
                },
                "networkRX": {
                    "type": "number"
                },
                "networkTX": {
                    "type": "number"
                },
                "shotTime": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerUpgrade": {
            "type": "object",
            "required": [
                "image",
                "name"
            ],
            "properties": {
                "forcePull": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CronjobBatchDelete": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "cleanData": {
                    "type": "boolean"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.CronjobClean": {
            "type": "object",
            "required": [
                "cronjobID"
            ],
            "properties": {
                "cleanData": {
                    "type": "boolean"
                },
                "cronjobID": {
                    "type": "integer"
                },
                "isDelete": {
                    "type": "boolean"
                }
            }
        },
        "dto.CronjobCreate": {
            "type": "object",
            "required": [
                "name",
                "spec",
                "type"
            ],
            "properties": {
                "alertCount": {
                    "type": "integer"
                },
                "alertTitle": {
                    "type": "string"
                },
                "appID": {
                    "type": "string"
                },
                "backupAccounts": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "dbName": {
                    "type": "string"
                },
                "dbType": {
                    "type": "string"
                },
                "defaultDownload": {
                    "type": "string"
                },
                "exclusionRules": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "retainCopies": {
                    "type": "integer",
                    "minimum": 1
                },
                "script": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                },
                "spec": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.CronjobDownload": {
            "type": "object",
            "required": [
                "backupAccountID",
                "recordID"
            ],
            "properties": {
                "backupAccountID": {
                    "type": "integer"
                },
                "recordID": {
                    "type": "integer"
                }
            }
        },
        "dto.CronjobUpdate": {
            "type": "object",
            "required": [
                "id",
                "name",
                "spec",
                "type"
            ],
            "properties": {
                "alertCount": {
                    "type": "integer"
                },
                "alertTitle": {
                    "type": "string"
                },
                "appID": {
                    "type": "string"
                },
                "backupAccounts": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "dbName": {
                    "type": "string"
                },
                "dbType": {
                    "type": "string"
                },
                "defaultDownload": {
                    "type": "string"
                },
                "exclusionRules": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "retainCopies": {
                    "type": "integer",
                    "minimum": 1
                },
                "script": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                },
                "spec": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.CronjobUpdateStatus": {
            "type": "object",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.DBBaseInfo": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "dto.DBConfUpdateByFile": {
            "type": "object",
            "required": [
                "database",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb",
                        "postgresql",
                        "redis"
                    ]
                }
            }
        },
        "dto.DaemonJsonConf": {
            "type": "object",
            "properties": {
                "cgroupDriver": {
                    "type": "string"
                },
                "experimental": {
                    "type": "boolean"
                },
                "fixedCidrV6": {
                    "type": "string"
                },
                "insecureRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip6Tables": {
                    "type": "boolean"
                },
                "iptables": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "isSwarm": {
                    "type": "boolean"
                },
                "liveRestore": {
                    "type": "boolean"
                },
                "logMaxFile": {
                    "type": "string"
                },
                "logMaxSize": {
                    "type": "string"
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.DaemonJsonUpdateByFile": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                }
            }
        },
        "dto.DashboardBase": {
            "type": "object",
            "properties": {
                "SystemProxy": {
                    "type": "string"
                },
                "appInstalledNumber": {
                    "type": "integer"
                },
                "cpuCores": {
                    "type": "integer"
                },
                "cpuLogicalCores": {
                    "type": "integer"
                },
                "cpuModelName": {
                    "type": "string"
                },
                "cronjobNumber": {
                    "type": "integer"
                },
                "currentInfo": {
                    "$ref": "#/definitions/dto.DashboardCurrent"
                },
                "databaseNumber": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "ipv4Addr": {
                    "type": "string"
                },
                "kernelArch": {
                    "type": "string"
                },
                "kernelVersion": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platformFamily": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "virtualizationSystem": {
                    "type": "string"
                },
                "websiteNumber": {
                    "type": "integer"
                }
            }
        },
        "dto.DashboardCurrent": {
            "type": "object",
            "properties": {
                "cpuPercent": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "cpuTotal": {
                    "type": "integer"
                },
                "cpuUsed": {
                    "type": "number"
                },
                "cpuUsedPercent": {
                    "type": "number"
                },
                "diskData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DiskInfo"
                    }
                },
                "gpuData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GPUInfo"
                    }
                },
                "ioCount": {
                    "type": "integer"
                },
                "ioReadBytes": {
                    "type": "integer"
                },
                "ioReadTime": {
                    "type": "integer"
                },
                "ioWriteBytes": {
                    "type": "integer"
                },
                "ioWriteTime": {
                    "type": "integer"
                },
                "load1": {
                    "type": "number"
                },
                "load15": {
                    "type": "number"
                },
                "load5": {
                    "type": "number"
                },
                "loadUsagePercent": {
                    "type": "number"
                },
                "memoryAvailable": {
                    "type": "integer"
                },
                "memoryTotal": {
                    "type": "integer"
                },
                "memoryUsed": {
                    "type": "integer"
                },
                "memoryUsedPercent": {
                    "type": "number"
                },
                "netBytesRecv": {
                    "type": "integer"
                },
                "netBytesSent": {
                    "type": "integer"
                },
                "procs": {
                    "type": "integer"
                },
                "shotTime": {
                    "type": "string"
                },
                "swapMemoryAvailable": {
                    "type": "integer"
                },
                "swapMemoryTotal": {
                    "type": "integer"
                },
                "swapMemoryUsed": {
                    "type": "integer"
                },
                "swapMemoryUsedPercent": {
                    "type": "number"
                },
                "timeSinceUptime": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "xpuData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.XPUInfo"
                    }
                }
            }
        },
        "dto.DashboardReq": {
            "type": "object",
            "properties": {
                "ioOption": {
                    "type": "string"
                },
                "netOption": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseCreate": {
            "type": "object",
            "required": [
                "from",
                "name",
                "type",
                "username",
                "version"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "clientCert": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 256
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "rootCert": {
                    "type": "string"
                },
                "skipVerify": {
                    "type": "boolean"
                },
                "ssl": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "deleteBackup": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.DatabaseInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "clientCert": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 256
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "rootCert": {
                    "type": "string"
                },
                "skipVerify": {
                    "type": "boolean"
                },
                "ssl": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseItem": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseOption": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseSearch": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseUpdate": {
            "type": "object",
            "required": [
                "type",
                "username",
                "version"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "clientCert": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "rootCert": {
                    "type": "string"
                },
                "skipVerify": {
                    "type": "boolean"
                },
                "ssl": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.DeviceBaseInfo": {
            "type": "object",
            "properties": {
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.HostHelper"
                    }
                },
                "localTime": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer"
                },
                "ntp": {
                    "type": "string"
                },
                "swapDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SwapHelper"
                    }
                },
                "swapMemoryAvailable": {
                    "type": "integer"
                },
                "swapMemoryTotal": {
                    "type": "integer"
                },
                "swapMemoryUsed": {
                    "type": "integer"
                },
                "timeZone": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.DiskInfo": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "free": {
                    "type": "integer"
                },
                "inodesFree": {
                    "type": "integer"
                },
                "inodesTotal": {
                    "type": "integer"
                },
                "inodesUsed": {
                    "type": "integer"
                },
                "inodesUsedPercent": {
                    "type": "number"
                },
                "path": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        },
        "dto.DockerOperation": {
            "type": "object",
            "required": [
                "operation"
            ],
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "start",
                        "restart",
                        "stop"
                    ]
                }
            }
        },
        "dto.DownloadRecord": {
            "type": "object",
            "required": [
                "fileDir",
                "fileName",
                "source"
            ],
            "properties": {
                "fileDir": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "OSS",
                        "S3",
                        "SFTP",
                        "MINIO",
                        "LOCAL",
                        "COS",
                        "KODO",
                        "OneDrive",
                        "WebDAV"
                    ]
                }
            }
        },
        "dto.ExtraProperties": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Tag"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.Fail2BanBaseInfo": {
            "type": "object",
            "properties": {
                "banAction": {
                    "type": "string"
                },
                "banTime": {
                    "type": "string"
                },
                "findTime": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isEnable": {
                    "type": "boolean"
                },
                "isExist": {
                    "type": "boolean"
                },
                "logPath": {
                    "type": "string"
                },
                "maxRetry": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.Fail2BanSearch": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "banned",
                        "ignore"
                    ]
                }
            }
        },
        "dto.Fail2BanUpdate": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "enum": [
                        "port",
                        "bantime",
                        "findtime",
                        "maxretry",
                        "banaction",
                        "logpath"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.FirewallBaseInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pingStatus": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.FirewallOperation": {
            "type": "object",
            "required": [
                "operation"
            ],
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "restart",
                        "disablePing",
                        "enablePing"
                    ]
                }
            }
        },
        "dto.ForBuckets": {
            "type": "object",
            "required": [
                "credential",
                "type",
                "vars"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "credential": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vars": {
                    "type": "string"
                }
            }
        },
        "dto.ForwardRuleOperate": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "operation",
                            "port",
                            "protocol",
                            "targetPort"
                        ],
                        "properties": {
                            "num": {
                                "type": "string"
                            },
                            "operation": {
                                "type": "string",
                                "enum": [
                                    "add",
                                    "remove"
                                ]
                            },
                            "port": {
                                "type": "string"
                            },
                            "protocol": {
                                "type": "string",
                                "enum": [
                                    "tcp",
                                    "udp",
                                    "tcp/udp"
                                ]
                            },
                            "targetIP": {
                                "type": "string"
                            },
                            "targetPort": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "dto.FtpBaseInfo": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "isExist": {
                    "type": "boolean"
                }
            }
        },
        "dto.FtpCreate": {
            "type": "object",
            "required": [
                "password",
                "path",
                "user"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.FtpLogSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "operation": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.FtpUpdate": {
            "type": "object",
            "required": [
                "password",
                "path"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.GPUInfo": {
            "type": "object",
            "properties": {
                "fanSpeed": {
                    "type": "string"
                },
                "gpuUtil": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "maxPowerLimit": {
                    "type": "string"
                },
                "memTotal": {
                    "type": "string"
                },
                "memUsed": {
                    "type": "string"
                },
                "memoryUsage": {
                    "type": "string"
                },
                "performanceState": {
                    "type": "string"
                },
                "powerDraw": {
                    "type": "string"
                },
                "powerUsage": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "temperature": {
                    "type": "string"
                }
            }
        },
        "dto.GenerateLoad": {
            "type": "object",
            "required": [
                "encryptionMode"
            ],
            "properties": {
                "encryptionMode": {
                    "type": "string",
                    "enum": [
                        "rsa",
                        "ed25519",
                        "ecdsa",
                        "dsa"
                    ]
                }
            }
        },
        "dto.GenerateSSH": {
            "type": "object",
            "required": [
                "encryptionMode"
            ],
            "properties": {
                "encryptionMode": {
                    "type": "string",
                    "enum": [
                        "rsa",
                        "ed25519",
                        "ecdsa",
                        "dsa"
                    ]
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.GroupCreate": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupSearch": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupUpdate": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.HostConnTest": {
            "type": "object",
            "required": [
                "addr",
                "port",
                "user"
            ],
            "properties": {
                "addr": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "password",
                        "key"
                    ]
                },
                "passPhrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "privateKey": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.HostHelper": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            }
        },
        "dto.HostInfo": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "groupBelong": {
                    "type": "string"
                },
                "groupID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passPhrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "privateKey": {
                    "type": "string"
                },
                "rememberPassword": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.HostOperate": {
            "type": "object",
            "required": [
                "addr",
                "port",
                "user"
            ],
            "properties": {
                "addr": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "password",
                        "key"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "groupID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passPhrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "privateKey": {
                    "type": "string"
                },
                "rememberPassword": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.HostTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TreeChild"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.ImageBuild": {
            "type": "object",
            "required": [
                "dockerfile",
                "from",
                "name"
            ],
            "properties": {
                "dockerfile": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.ImageInfo": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isUsed": {
                    "type": "boolean"
                },
                "size": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.ImageLoad": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.ImagePull": {
            "type": "object",
            "required": [
                "imageName"
            ],
            "properties": {
                "imageName": {
                    "type": "string"
                },
                "repoID": {
                    "type": "integer"
                }
            }
        },
        "dto.ImagePush": {
            "type": "object",
            "required": [
                "name",
                "repoID",
                "tagName"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "repoID": {
                    "type": "integer"
                },
                "tagName": {
                    "type": "string"
                }
            }
        },
        "dto.ImageRepoDelete": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.ImageRepoOption": {
            "type": "object",
            "properties": {
                "downloadUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ImageRepoUpdate": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "boolean"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "maxLength": 256
                },
                "protocol": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 256
                }
            }
        },
        "dto.ImageSave": {
            "type": "object",
            "required": [
                "name",
                "path",
                "tagName"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "tagName": {
                    "type": "string"
                }
            }
        },
        "dto.ImageTag": {
            "type": "object",
            "required": [
                "sourceID",
                "targetName"
            ],
            "properties": {
                "sourceID": {
                    "type": "string"
                },
                "targetName": {
                    "type": "string"
                }
            }
        },
        "dto.InspectReq": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.LogOption": {
            "type": "object",
            "properties": {
                "logMaxFile": {
                    "type": "string"
                },
                "logMaxSize": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "required": [
                "authMethod",
                "language",
                "name",
                "password"
            ],
            "properties": {
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "jwt",
                        "session"
                    ]
                },
                "captcha": {
                    "type": "string"
                },
                "captchaID": {
                    "type": "string"
                },
                "ignoreCaptcha": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "zh",
                        "en",
                        "tw",
                        "ja",
                        "ru",
                        "ms",
                        "pt-BR"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.MFALogin": {
            "type": "object",
            "required": [
                "code",
                "name",
                "password"
            ],
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.MfaCredential": {
            "type": "object",
            "required": [
                "code",
                "interval",
                "secret"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "interval": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "dto.MonitorData": {
            "type": "object",
            "required": [
                "param"
            ],
            "properties": {
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "param": {
                    "type": "string",
                    "enum": [
                        "cpu",
                        "memory",
                        "load",
                        "io",
                        "network"
                    ]
                },
                "value": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "dto.MonitorSearch": {
            "type": "object",
            "required": [
                "param"
            ],
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "param": {
                    "type": "string",
                    "enum": [
                        "all",
                        "cpu",
                        "memory",
                        "load",
                        "io",
                        "network"
                    ]
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlDBCreate": {
            "type": "object",
            "required": [
                "database",
                "format",
                "from",
                "name",
                "password",
                "permission",
                "username"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "utf8mb4",
                        "utf8",
                        "gbk",
                        "big5"
                    ]
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlDBDelete": {
            "type": "object",
            "required": [
                "database",
                "id",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "deleteBackup": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb"
                    ]
                }
            }
        },
        "dto.MysqlDBDeleteCheck": {
            "type": "object",
            "required": [
                "database",
                "id",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb"
                    ]
                }
            }
        },
        "dto.MysqlDBSearch": {
            "type": "object",
            "required": [
                "database",
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.MysqlLoadDB": {
            "type": "object",
            "required": [
                "database",
                "from",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb"
                    ]
                }
            }
        },
        "dto.MysqlOption": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlStatus": {
            "type": "object",
            "properties": {
                "Aborted_clients": {
                    "type": "string"
                },
                "Aborted_connects": {
                    "type": "string"
                },
                "Bytes_received": {
                    "type": "string"
                },
                "Bytes_sent": {
                    "type": "string"
                },
                "Com_commit": {
                    "type": "string"
                },
                "Com_rollback": {
                    "type": "string"
                },
                "Connections": {
                    "type": "string"
                },
                "Created_tmp_disk_tables": {
                    "type": "string"
                },
                "Created_tmp_tables": {
                    "type": "string"
                },
                "File": {
                    "type": "string"
                },
                "Innodb_buffer_pool_pages_dirty": {
                    "type": "string"
                },
                "Innodb_buffer_pool_read_requests": {
                    "type": "string"
                },
                "Innodb_buffer_pool_reads": {
                    "type": "string"
                },
                "Key_read_requests": {
                    "type": "string"
                },
                "Key_reads": {
                    "type": "string"
                },
                "Key_write_requests": {
                    "type": "string"
                },
                "Key_writes": {
                    "type": "string"
                },
                "Max_used_connections": {
                    "type": "string"
                },
                "Open_tables": {
                    "type": "string"
                },
                "Opened_files": {
                    "type": "string"
                },
                "Opened_tables": {
                    "type": "string"
                },
                "Position": {
                    "type": "string"
                },
                "Qcache_hits": {
                    "type": "string"
                },
                "Qcache_inserts": {
                    "type": "string"
                },
                "Questions": {
                    "type": "string"
                },
                "Run": {
                    "type": "string"
                },
                "Select_full_join": {
                    "type": "string"
                },
                "Select_range_check": {
                    "type": "string"
                },
                "Sort_merge_passes": {
                    "type": "string"
                },
                "Table_locks_waited": {
                    "type": "string"
                },
                "Threads_cached": {
                    "type": "string"
                },
                "Threads_connected": {
                    "type": "string"
                },
                "Threads_created": {
                    "type": "string"
                },
                "Threads_running": {
                    "type": "string"
                },
                "Uptime": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlVariables": {
            "type": "object",
            "properties": {
                "binlog_cache_size": {
                    "type": "string"
                },
                "innodb_buffer_pool_size": {
                    "type": "string"
                },
                "innodb_log_buffer_size": {
                    "type": "string"
                },
                "join_buffer_size": {
                    "type": "string"
                },
                "key_buffer_size": {
                    "type": "string"
                },
                "long_query_time": {
                    "type": "string"
                },
                "max_connections": {
                    "type": "string"
                },
                "max_heap_table_size": {
                    "type": "string"
                },
                "query_cache_size": {
                    "type": "string"
                },
                "query_cache_type": {
                    "type": "string"
                },
                "read_buffer_size": {
                    "type": "string"
                },
                "read_rnd_buffer_size": {
                    "type": "string"
                },
                "slow_query_log": {
                    "type": "string"
                },
                "sort_buffer_size": {
                    "type": "string"
                },
                "table_open_cache": {
                    "type": "string"
                },
                "thread_cache_size": {
                    "type": "string"
                },
                "thread_stack": {
                    "type": "string"
                },
                "tmp_table_size": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlVariablesUpdate": {
            "type": "object",
            "required": [
                "database",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mysql",
                        "mariadb"
                    ]
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MysqlVariablesUpdateHelper"
                    }
                }
            }
        },
        "dto.MysqlVariablesUpdateHelper": {
            "type": "object",
            "properties": {
                "param": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "dto.NetworkCreate": {
            "type": "object",
            "required": [
                "driver",
                "name"
            ],
            "properties": {
                "auxAddress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SettingUpdate"
                    }
                },
                "auxAddressV6": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SettingUpdate"
                    }
                },
                "driver": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "gatewayV6": {
                    "type": "string"
                },
                "ipRange": {
                    "type": "string"
                },
                "ipRangeV6": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "boolean"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnet": {
                    "type": "string"
                },
                "subnetV6": {
                    "type": "string"
                }
            }
        },
        "dto.NginxAuth": {
            "type": "object",
            "properties": {
                "remark": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.NginxKey": {
            "type": "string",
            "enum": [
                "index",
                "limit-conn",
                "ssl",
                "cache",
                "http-per",
                "proxy-cache"
            ],
            "x-enum-varnames": [
                "Index",
                "LimitConn",
                "SSL",
                "CACHE",
                "HttpPer",
                "ProxyCache"
            ]
        },
        "dto.OneDriveInfo": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                }
            }
        },
        "dto.Operate": {
            "type": "object",
            "required": [
                "operation"
            ],
            "properties": {
                "operation": {
                    "type": "string"
                }
            }
        },
        "dto.OperateByID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.OperationWithName": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.OperationWithNameAndType": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.Options": {
            "type": "object",
            "properties": {
                "option": {
                    "type": "string"
                }
            }
        },
        "dto.OsInfo": {
            "type": "object",
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "kernelArch": {
                    "type": "string"
                },
                "kernelVersion": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platformFamily": {
                    "type": "string"
                }
            }
        },
        "dto.PageContainer": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize",
                "state"
            ],
            "properties": {
                "excludeAppStore": {
                    "type": "boolean"
                },
                "filters": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "state",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "all",
                        "created",
                        "running",
                        "paused",
                        "restarting",
                        "removing",
                        "exited",
                        "dead"
                    ]
                }
            }
        },
        "dto.PageCronjob": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "status",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PageInfo": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PageResult": {
            "type": "object",
            "properties": {
                "items": {},
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PageSnapshot": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PasswordUpdate": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "dto.PortHelper": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "string"
                },
                "hostIP": {
                    "type": "string"
                },
                "hostPort": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "dto.PortRuleOperate": {
            "type": "object",
            "required": [
                "operation",
                "port",
                "protocol",
                "strategy"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove"
                    ]
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp",
                        "tcp/udp"
                    ]
                },
                "strategy": {
                    "type": "string",
                    "enum": [
                        "accept",
                        "drop"
                    ]
                }
            }
        },
        "dto.PortRuleUpdate": {
            "type": "object",
            "properties": {
                "newRule": {
                    "$ref": "#/definitions/dto.PortRuleOperate"
                },
                "oldRule": {
                    "$ref": "#/definitions/dto.PortRuleOperate"
                }
            }
        },
        "dto.PortUpdate": {
            "type": "object",
            "required": [
                "serverPort"
            ],
            "properties": {
                "serverPort": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                }
            }
        },
        "dto.PostgresqlBindUser": {
            "type": "object",
            "required": [
                "database",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "superUser": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.PostgresqlDBCreate": {
            "type": "object",
            "required": [
                "database",
                "from",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "superUser": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.PostgresqlDBDelete": {
            "type": "object",
            "required": [
                "database",
                "id",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "deleteBackup": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postgresql"
                    ]
                }
            }
        },
        "dto.PostgresqlDBDeleteCheck": {
            "type": "object",
            "required": [
                "database",
                "id",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postgresql"
                    ]
                }
            }
        },
        "dto.PostgresqlDBSearch": {
            "type": "object",
            "required": [
                "database",
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PostgresqlLoadDB": {
            "type": "object",
            "required": [
                "database",
                "from",
                "type"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postgresql"
                    ]
                }
            }
        },
        "dto.ProxyUpdate": {
            "type": "object",
            "properties": {
                "proxyPasswd": {
                    "type": "string"
                },
                "proxyPasswdKeep": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "string"
                },
                "proxyType": {
                    "type": "string"
                },
                "proxyUrl": {
                    "type": "string"
                },
                "proxyUser": {
                    "type": "string"
                }
            }
        },
        "dto.RecordSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "type"
            ],
            "properties": {
                "detailName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.RecordSearchByCronjob": {
            "type": "object",
            "required": [
                "cronjobID",
                "page",
                "pageSize"
            ],
            "properties": {
                "cronjobID": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.RedisCommand": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RedisConf": {
            "type": "object",
            "required": [
                "database"
            ],
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "maxclients": {
                    "type": "string"
                },
                "maxmemory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "requirepass": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "dto.RedisConfPersistenceUpdate": {
            "type": "object",
            "required": [
                "database",
                "type"
            ],
            "properties": {
                "appendfsync": {
                    "type": "string"
                },
                "appendonly": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "save": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "aof",
                        "rbd"
                    ]
                }
            }
        },
        "dto.RedisConfUpdate": {
            "type": "object",
            "required": [
                "database"
            ],
            "properties": {
                "database": {
                    "type": "string"
                },
                "maxclients": {
                    "type": "string"
                },
                "maxmemory": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "dto.RedisPersistence": {
            "type": "object",
            "required": [
                "database"
            ],
            "properties": {
                "appendfsync": {
                    "type": "string"
                },
                "appendonly": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "save": {
                    "type": "string"
                }
            }
        },
        "dto.RedisStatus": {
            "type": "object",
            "required": [
                "database"
            ],
            "properties": {
                "connected_clients": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "instantaneous_ops_per_sec": {
                    "type": "string"
                },
                "keyspace_hits": {
                    "type": "string"
                },
                "keyspace_misses": {
                    "type": "string"
                },
                "latest_fork_usec": {
                    "type": "string"
                },
                "mem_fragmentation_ratio": {
                    "type": "string"
                },
                "tcp_port": {
                    "type": "string"
                },
                "total_commands_processed": {
                    "type": "string"
                },
                "total_connections_received": {
                    "type": "string"
                },
                "uptime_in_days": {
                    "type": "string"
                },
                "used_memory": {
                    "type": "string"
                },
                "used_memory_peak": {
                    "type": "string"
                },
                "used_memory_rss": {
                    "type": "string"
                }
            }
        },
        "dto.ResourceLimit": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                }
            }
        },
        "dto.RuleSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "type"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.SSHConf": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                }
            }
        },
        "dto.SSHHistory": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "dateStr": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.SSHInfo": {
            "type": "object",
            "properties": {
                "autoStart": {
                    "type": "boolean"
                },
                "listenAddress": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "passwordAuthentication": {
                    "type": "string"
                },
                "permitRootLogin": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "pubkeyAuthentication": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "useDNS": {
                    "type": "string"
                }
            }
        },
        "dto.SSHLog": {
            "type": "object",
            "properties": {
                "failedCount": {
                    "type": "integer"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SSHHistory"
                    }
                },
                "successfulCount": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "dto.SSHUpdate": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "newValue": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                }
            }
        },
        "dto.SSLInfo": {
            "type": "object",
            "properties": {
                "cert": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "rootPath": {
                    "type": "string"
                },
                "sslID": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "dto.SSLUpdate": {
            "type": "object",
            "required": [
                "ssl",
                "sslType"
            ],
            "properties": {
                "autoRestart": {
                    "type": "string"
                },
                "cert": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "ssl": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                },
                "sslID": {
                    "type": "integer"
                },
                "sslType": {
                    "type": "string",
                    "enum": [
                        "self",
                        "select",
                        "import",
                        "import-paste",
                        "import-local"
                    ]
                }
            }
        },
        "dto.SearchClamWithPage": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "name",
                        "status",
                        "created_at"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchForTree": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string"
                }
            }
        },
        "dto.SearchHostWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "groupID": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchLgLogWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchOpLogWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "operation": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchRecord": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "cronjobID": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchSSHLog": {
            "type": "object",
            "required": [
                "Status",
                "page",
                "pageSize"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "enum": [
                        "Success",
                        "Failed",
                        "All"
                    ]
                },
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SettingInfo": {
            "type": "object",
            "properties": {
                "allowIPs": {
                    "type": "string"
                },
                "apiInterfaceStatus": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiKeyValidityTime": {
                    "type": "string"
                },
                "appStoreLastModified": {
                    "type": "string"
                },
                "appStoreSyncStatus": {
                    "type": "string"
                },
                "appStoreVersion": {
                    "type": "string"
                },
                "autoRestart": {
                    "type": "string"
                },
                "bindAddress": {
                    "type": "string"
                },
                "bindDomain": {
                    "type": "string"
                },
                "complexityVerification": {
                    "type": "string"
                },
                "defaultNetwork": {
                    "type": "string"
                },
                "developerMode": {
                    "type": "string"
                },
                "dingVars": {
                    "type": "string"
                },
                "dockerSockPath": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailVars": {
                    "type": "string"
                },
                "expirationDays": {
                    "type": "string"
                },
                "expirationTime": {
                    "type": "string"
                },
                "fileRecycleBin": {
                    "type": "string"
                },
                "ipWhiteList": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "lastCleanData": {
                    "type": "string"
                },
                "lastCleanSize": {
                    "type": "string"
                },
                "lastCleanTime": {
                    "type": "string"
                },
                "localTime": {
                    "type": "string"
                },
                "menuTabs": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string"
                },
                "mfaInterval": {
                    "type": "string"
                },
                "mfaSecret": {
                    "type": "string"
                },
                "mfaStatus": {
                    "type": "string"
                },
                "monitorInterval": {
                    "type": "string"
                },
                "monitorStatus": {
                    "type": "string"
                },
                "monitorStoreDays": {
                    "type": "string"
                },
                "noAuthSetting": {
                    "type": "string"
                },
                "ntpSite": {
                    "type": "string"
                },
                "panelName": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "proxyPasswd": {
                    "type": "string"
                },
                "proxyPasswdKeep": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "string"
                },
                "proxyType": {
                    "type": "string"
                },
                "proxyUrl": {
                    "type": "string"
                },
                "proxyUser": {
                    "type": "string"
                },
                "securityEntrance": {
                    "type": "string"
                },
                "serverPort": {
                    "type": "string"
                },
                "sessionTimeout": {
                    "type": "string"
                },
                "snapshotIgnore": {
                    "type": "string"
                },
                "ssl": {
                    "type": "string"
                },
                "sslType": {
                    "type": "string"
                },
                "systemIP": {
                    "type": "string"
                },
                "systemVersion": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "weChatVars": {
                    "type": "string"
                },
                "xpackHideMenu": {
                    "type": "string"
                }
            }
        },
        "dto.SettingUpdate": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SnapshotBatchDelete": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "deleteWithFile": {
                    "type": "boolean"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.SnapshotCreate": {
            "type": "object",
            "required": [
                "defaultDownload",
                "from"
            ],
            "properties": {
                "defaultDownload": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 256
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "dto.SnapshotFile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.SnapshotImport": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 256
                },
                "from": {
                    "type": "string"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SnapshotRecover": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isNew": {
                    "type": "boolean"
                },
                "reDownload": {
                    "type": "boolean"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "dto.SnapshotStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "backupData": {
                    "type": "string"
                },
                "compress": {
                    "type": "string"
                },
                "daemonJson": {
                    "type": "string"
                },
                "panel": {
                    "type": "string"
                },
                "panelData": {
                    "type": "string"
                },
                "panelInfo": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "upload": {
                    "type": "string"
                }
            }
        },
        "dto.SwapHelper": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "isNew": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "used": {
                    "type": "string"
                }
            }
        },
        "dto.Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                }
            }
        },
        "dto.TreeChild": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateByFile": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateByNameAndFile": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDescription": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 256
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateFirewallDescription": {
            "type": "object",
            "required": [
                "strategy"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string",
                    "enum": [
                        "accept",
                        "drop"
                    ]
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.Upgrade": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.UpgradeInfo": {
            "type": "object",
            "properties": {
                "latestVersion": {
                    "type": "string"
                },
                "newVersion": {
                    "type": "string"
                },
                "releaseNote": {
                    "type": "string"
                },
                "testVersion": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginInfo": {
            "type": "object",
            "properties": {
                "mfaStatus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.VolumeCreate": {
            "type": "object",
            "required": [
                "driver",
                "name"
            ],
            "properties": {
                "driver": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.VolumeHelper": {
            "type": "object",
            "properties": {
                "containerDir": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.XPUInfo": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "type": "integer"
                },
                "deviceName": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "memoryUsed": {
                    "type": "string"
                },
                "memoryUtil": {
                    "type": "string"
                },
                "power": {
                    "type": "string"
                },
                "temperature": {
                    "type": "string"
                }
            }
        },
        "files.FileInfo": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "favoriteID": {
                    "type": "integer"
                },
                "gid": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "isDetail": {
                    "type": "boolean"
                },
                "isDir": {
                    "type": "boolean"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isSymlink": {
                    "type": "boolean"
                },
                "itemTotal": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.FileInfo"
                    }
                },
                "linkPath": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "modTime": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "mfa.Otp": {
            "type": "object",
            "properties": {
                "qrImage": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "model.App": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "crossVersionUpdate": {
                    "type": "boolean"
                },
                "document": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "readMe": {
                    "type": "string"
                },
                "recommend": {
                    "type": "integer"
                },
                "required": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "shortDescEn": {
                    "type": "string"
                },
                "shortDescZh": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "model.AppInstall": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/definitions/model.App"
                },
                "appDetailId": {
                    "type": "integer"
                },
                "appId": {
                    "type": "integer"
                },
                "containerName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "httpPort": {
                    "type": "integer"
                },
                "httpsPort": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "model.Favorite": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "isTxt": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Runtime": {
            "type": "object",
            "properties": {
                "appDetailId": {
                    "type": "integer"
                },
                "codeDir": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "workDir": {
                    "type": "string"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Website": {
            "type": "object",
            "properties": {
                "IPV6": {
                    "type": "boolean"
                },
                "accessLog": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "appInstallId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultServer": {
                    "type": "boolean"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WebsiteDomain"
                    }
                },
                "errorLog": {
                    "type": "boolean"
                },
                "expireDate": {
                    "type": "string"
                },
                "ftpId": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "httpConfig": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "proxyType": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "rewrite": {
                    "type": "string"
                },
                "runtimeID": {
                    "type": "integer"
                },
                "siteDir": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "webSiteGroupId": {
                    "type": "integer"
                },
                "webSiteSSL": {
                    "$ref": "#/definitions/model.WebsiteSSL"
                },
                "webSiteSSLId": {
                    "type": "integer"
                }
            }
        },
        "model.WebsiteAcmeAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "eabHmacKey": {
                    "type": "string"
                },
                "eabKid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.WebsiteDnsAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.WebsiteDomain": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "websiteId": {
                    "type": "integer"
                }
            }
        },
        "model.WebsiteSSL": {
            "type": "object",
            "properties": {
                "acmeAccount": {
                    "$ref": "#/definitions/model.WebsiteAcmeAccount"
                },
                "acmeAccountId": {
                    "type": "integer"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "caId": {
                    "type": "integer"
                },
                "certURL": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "disableCNAME": {
                    "type": "boolean"
                },
                "dnsAccount": {
                    "$ref": "#/definitions/model.WebsiteDnsAccount"
                },
                "dnsAccountId": {
                    "type": "integer"
                },
                "domains": {
                    "type": "string"
                },
                "execShell": {
                    "type": "boolean"
                },
                "expireDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "nameserver1": {
                    "type": "string"
                },
                "nameserver2": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "pem": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "pushDir": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "string"
                },
                "skipDNS": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "websites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Website"
                    }
                }
            }
        },
        "request.AppInstallCreate": {
            "type": "object",
            "required": [
                "appDetailId",
                "name"
            ],
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "allowPort": {
                    "type": "boolean"
                },
                "appDetailId": {
                    "type": "integer"
                },
                "containerName": {
                    "type": "string"
                },
                "cpuQuota": {
                    "type": "number"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "editCompose": {
                    "type": "boolean"
                },
                "hostMode": {
                    "type": "boolean"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "memoryUnit": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "pullImage": {
                    "type": "boolean"
                },
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "request.AppInstalledIgnoreUpgrade": {
            "type": "object",
            "required": [
                "detailID",
                "operate"
            ],
            "properties": {
                "detailID": {
                    "type": "integer"
                },
                "operate": {
                    "type": "string",
                    "enum": [
                        "cancel",
                        "ignore"
                    ]
                }
            }
        },
        "request.AppInstalledInfo": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.AppInstalledOperate": {
            "type": "object",
            "required": [
                "installId",
                "operate"
            ],
            "properties": {
                "backup": {
                    "type": "boolean"
                },
                "backupId": {
                    "type": "integer"
                },
                "deleteBackup": {
                    "type": "boolean"
                },
                "deleteDB": {
                    "type": "boolean"
                },
                "detailId": {
                    "type": "integer"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "installId": {
                    "type": "integer"
                },
                "operate": {
                    "type": "string"
                },
                "pullImage": {
                    "type": "boolean"
                }
            }
        },
        "request.AppInstalledSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "sync": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unused": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            }
        },
        "request.AppInstalledUpdate": {
            "type": "object",
            "required": [
                "installId",
                "params"
            ],
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "allowPort": {
                    "type": "boolean"
                },
                "containerName": {
                    "type": "string"
                },
                "cpuQuota": {
                    "type": "number"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "editCompose": {
                    "type": "boolean"
                },
                "hostMode": {
                    "type": "boolean"
                },
                "installId": {
                    "type": "integer"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "memoryUnit": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "pullImage": {
                    "type": "boolean"
                }
            }
        },
        "request.AppSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "recommend": {
                    "type": "boolean"
                },
                "resource": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.DirSizeReq": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "request.ExposedPort": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "hostPort": {
                    "type": "integer"
                }
            }
        },
        "request.FavoriteCreate": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "request.FavoriteDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.FileBatchDelete": {
            "type": "object",
            "required": [
                "paths"
            ],
            "properties": {
                "isDir": {
                    "type": "boolean"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.FileCompress": {
            "type": "object",
            "required": [
                "dst",
                "files",
                "name",
                "type"
            ],
            "properties": {
                "dst": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "replace": {
                    "type": "boolean"
                },
                "secret": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.FileContentReq": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "isDetail": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.FileCreate": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "isDir": {
                    "type": "boolean"
                },
                "isLink": {
                    "type": "boolean"
                },
                "isSymlink": {
                    "type": "boolean"
                },
                "linkPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "sub": {
                    "type": "boolean"
                }
            }
        },
        "request.FileDeCompress": {
            "type": "object",
            "required": [
                "dst",
                "path",
                "type"
            ],
            "properties": {
                "dst": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.FileDelete": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "forceDelete": {
                    "type": "boolean"
                },
                "isDir": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.FileDownload": {
            "type": "object",
            "required": [
                "name",
                "paths",
                "type"
            ],
            "properties": {
                "compress": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.FileEdit": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.FileMove": {
            "type": "object",
            "required": [
                "newPath",
                "oldPaths",
                "type"
            ],
            "properties": {
                "cover": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "newPath": {
                    "type": "string"
                },
                "oldPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.FileOption": {
            "type": "object",
            "properties": {
                "containSub": {
                    "type": "boolean"
                },
                "dir": {
                    "type": "boolean"
                },
                "expand": {
                    "type": "boolean"
                },
                "isDetail": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "showHidden": {
                    "type": "boolean"
                },
                "sortBy": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "string"
                }
            }
        },
        "request.FilePathCheck": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "request.FileReadByLineReq": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "type"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "latest": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.FileRename": {
            "type": "object",
            "required": [
                "newName",
                "oldName"
            ],
            "properties": {
                "newName": {
                    "type": "string"
                },
                "oldName": {
                    "type": "string"
                }
            }
        },
        "request.FileRoleReq": {
            "type": "object",
            "required": [
                "group",
                "mode",
                "paths",
                "user"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "mode": {
                    "type": "integer"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.FileRoleUpdate": {
            "type": "object",
            "required": [
                "group",
                "path",
                "user"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "sub": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.FileWget": {
            "type": "object",
            "required": [
                "name",
                "path",
                "url"
            ],
            "properties": {
                "ignoreCertificate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "request.HostToolConfig": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "operate": {
                    "type": "string",
                    "enum": [
                        "get",
                        "set"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "supervisord"
                    ]
                }
            }
        },
        "request.HostToolCreate": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "configPath": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.HostToolLogReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "supervisord"
                    ]
                }
            }
        },
        "request.HostToolReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "operate": {
                    "type": "string",
                    "enum": [
                        "status",
                        "restart",
                        "start",
                        "stop"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "supervisord"
                    ]
                }
            }
        },
        "request.NewAppInstall": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "allowPort": {
                    "type": "boolean"
                },
                "appDetailID": {
                    "type": "integer"
                },
                "containerName": {
                    "type": "string"
                },
                "cpuQuota": {
                    "type": "number"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "editCompose": {
                    "type": "boolean"
                },
                "hostMode": {
                    "type": "boolean"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "memoryUnit": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "pullImage": {
                    "type": "boolean"
                }
            }
        },
        "request.NginxAntiLeechUpdate": {
            "type": "object",
            "required": [
                "extends",
                "return",
                "websiteID"
            ],
            "properties": {
                "blocked": {
                    "type": "boolean"
                },
                "cache": {
                    "type": "boolean"
                },
                "cacheTime": {
                    "type": "integer"
                },
                "cacheUint": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "extends": {
                    "type": "string"
                },
                "logEnable": {
                    "type": "boolean"
                },
                "noneRef": {
                    "type": "boolean"
                },
                "return": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxAuthReq": {
            "type": "object",
            "required": [
                "websiteID"
            ],
            "properties": {
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxAuthUpdate": {
            "type": "object",
            "required": [
                "operate",
                "websiteID"
            ],
            "properties": {
                "operate": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxCommonReq": {
            "type": "object",
            "required": [
                "websiteID"
            ],
            "properties": {
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxConfigFileUpdate": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "backup": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "request.NginxConfigUpdate": {
            "type": "object",
            "required": [
                "operate"
            ],
            "properties": {
                "operate": {
                    "type": "string",
                    "enum": [
                        "add",
                        "update",
                        "delete"
                    ]
                },
                "params": {},
                "scope": {
                    "$ref": "#/definitions/dto.NginxKey"
                },
                "websiteId": {
                    "type": "integer"
                }
            }
        },
        "request.NginxProxyUpdate": {
            "type": "object",
            "required": [
                "content",
                "name",
                "websiteID"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxRedirectReq": {
            "type": "object",
            "required": [
                "name",
                "operate",
                "redirect",
                "target",
                "type",
                "websiteID"
            ],
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable": {
                    "type": "boolean"
                },
                "keepPath": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operate": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "redirect": {
                    "type": "string"
                },
                "redirectRoot": {
                    "type": "boolean"
                },
                "target": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxRedirectUpdate": {
            "type": "object",
            "required": [
                "content",
                "name",
                "websiteID"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.NginxRewriteReq": {
            "type": "object",
            "required": [
                "name",
                "websiteId"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "websiteId": {
                    "type": "integer"
                }
            }
        },
        "request.NginxRewriteUpdate": {
            "type": "object",
            "required": [
                "name",
                "websiteId"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "websiteId": {
                    "type": "integer"
                }
            }
        },
        "request.NginxScopeReq": {
            "type": "object",
            "required": [
                "scope"
            ],
            "properties": {
                "scope": {
                    "$ref": "#/definitions/dto.NginxKey"
                },
                "websiteId": {
                    "type": "integer"
                }
            }
        },
        "request.NodeModuleReq": {
            "type": "object",
            "required": [
                "ID"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                }
            }
        },
        "request.NodePackageReq": {
            "type": "object",
            "properties": {
                "codeDir": {
                    "type": "string"
                }
            }
        },
        "request.PHPExtensionsCreate": {
            "type": "object",
            "required": [
                "extensions",
                "name"
            ],
            "properties": {
                "extensions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.PHPExtensionsDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.PHPExtensionsSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "all": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "request.PHPExtensionsUpdate": {
            "type": "object",
            "required": [
                "extensions",
                "id"
            ],
            "properties": {
                "extensions": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.PortUpdate": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "request.ProcessReq": {
            "type": "object",
            "required": [
                "PID"
            ],
            "properties": {
                "PID": {
                    "type": "integer"
                }
            }
        },
        "request.RecycleBinReduce": {
            "type": "object",
            "required": [
                "from",
                "rName"
            ],
            "properties": {
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rName": {
                    "type": "string"
                }
            }
        },
        "request.RuntimeCreate": {
            "type": "object",
            "properties": {
                "appDetailId": {
                    "type": "integer"
                },
                "clean": {
                    "type": "boolean"
                },
                "codeDir": {
                    "type": "string"
                },
                "exposedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.ExposedPort"
                    }
                },
                "image": {
                    "type": "string"
                },
                "install": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "port": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "request.RuntimeDelete": {
            "type": "object",
            "properties": {
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.RuntimeOperate": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "operate": {
                    "type": "string"
                }
            }
        },
        "request.RuntimeSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.RuntimeUpdate": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "codeDir": {
                    "type": "string"
                },
                "exposedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.ExposedPort"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "install": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "port": {
                    "type": "integer"
                },
                "rebuild": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "request.SearchUploadWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "path"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "request.SupervisorProcessConfig": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numprocs": {
                    "type": "string"
                },
                "operate": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.SupervisorProcessFileReq": {
            "type": "object",
            "required": [
                "file",
                "name",
                "operate"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "file": {
                    "type": "string",
                    "enum": [
                        "out.log",
                        "err.log",
                        "config"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "operate": {
                    "type": "string",
                    "enum": [
                        "get",
                        "clear",
                        "update"
                    ]
                }
            }
        },
        "request.WebsiteAcmeAccountCreate": {
            "type": "object",
            "required": [
                "email",
                "keyType",
                "type"
            ],
            "properties": {
                "eabHmacKey": {
                    "type": "string"
                },
                "eabKid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "keyType": {
                    "type": "string",
                    "enum": [
                        "P256",
                        "P384",
                        "2048",
                        "3072",
                        "4096",
                        "8192"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "letsencrypt",
                        "zerossl",
                        "buypass",
                        "google"
                    ]
                }
            }
        },
        "request.WebsiteBatchDelReq": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.WebsiteCACreate": {
            "type": "object",
            "required": [
                "commonName",
                "country",
                "keyType",
                "name",
                "organization"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "keyType": {
                    "type": "string",
                    "enum": [
                        "P256",
                        "P384",
                        "2048",
                        "3072",
                        "4096",
                        "8192"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "organizationUint": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteCAObtain": {
            "type": "object",
            "required": [
                "domains",
                "id",
                "keyType",
                "time",
                "unit"
            ],
            "properties": {
                "autoRenew": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "domains": {
                    "type": "string"
                },
                "execShell": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string",
                    "enum": [
                        "P256",
                        "P384",
                        "2048",
                        "3072",
                        "4096",
                        "8192"
                    ]
                },
                "pushDir": {
                    "type": "boolean"
                },
                "renew": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "string"
                },
                "sslID": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteCASearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteCommonReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteCreate": {
            "type": "object",
            "required": [
                "alias",
                "primaryDomain",
                "type",
                "webSiteGroupID"
            ],
            "properties": {
                "IPV6": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                },
                "appID": {
                    "type": "integer"
                },
                "appInstall": {
                    "$ref": "#/definitions/request.NewAppInstall"
                },
                "appInstallID": {
                    "type": "integer"
                },
                "appType": {
                    "type": "string",
                    "enum": [
                        "new",
                        "installed"
                    ]
                },
                "ftpPassword": {
                    "type": "string"
                },
                "ftpUser": {
                    "type": "string"
                },
                "otherDomains": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "proxyType": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "runtimeID": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "webSiteGroupID": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteDNSReq": {
            "type": "object",
            "required": [
                "acmeAccountId",
                "domains"
            ],
            "properties": {
                "acmeAccountId": {
                    "type": "integer"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.WebsiteDefaultUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "deleteApp": {
                    "type": "boolean"
                },
                "deleteBackup": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteDnsAccountCreate": {
            "type": "object",
            "required": [
                "authorization",
                "name",
                "type"
            ],
            "properties": {
                "authorization": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteDnsAccountUpdate": {
            "type": "object",
            "required": [
                "authorization",
                "id",
                "name",
                "type"
            ],
            "properties": {
                "authorization": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteDomainCreate": {
            "type": "object",
            "required": [
                "domains",
                "websiteID"
            ],
            "properties": {
                "domains": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteDomainDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteHTTPSOp": {
            "type": "object",
            "required": [
                "websiteId"
            ],
            "properties": {
                "SSLProtocol": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "algorithm": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "certificatePath": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "hsts": {
                    "type": "boolean"
                },
                "httpConfig": {
                    "type": "string",
                    "enum": [
                        "HTTPSOnly",
                        "HTTPAlso",
                        "HTTPToHTTPS"
                    ]
                },
                "importType": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPath": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "existed",
                        "auto",
                        "manual"
                    ]
                },
                "websiteId": {
                    "type": "integer"
                },
                "websiteSSLId": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteHtmlUpdate": {
            "type": "object",
            "required": [
                "content",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteInstallCheckReq": {
            "type": "object",
            "properties": {
                "InstallIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.WebsiteLogReq": {
            "type": "object",
            "required": [
                "id",
                "logType",
                "operate"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "logType": {
                    "type": "string"
                },
                "operate": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteNginxUpdate": {
            "type": "object",
            "required": [
                "content",
                "id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteOp": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "operate": {
                    "type": "string"
                }
            }
        },
        "request.WebsitePHPConfigUpdate": {
            "type": "object",
            "required": [
                "id",
                "scope"
            ],
            "properties": {
                "disableFunctions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "scope": {
                    "type": "string"
                },
                "uploadMaxSize": {
                    "type": "string"
                }
            }
        },
        "request.WebsitePHPFileUpdate": {
            "type": "object",
            "required": [
                "content",
                "id",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.WebsitePHPVersionReq": {
            "type": "object",
            "required": [
                "runtimeID",
                "websiteID"
            ],
            "properties": {
                "retainConfig": {
                    "type": "boolean"
                },
                "runtimeID": {
                    "type": "integer"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteProxyConfig": {
            "type": "object",
            "required": [
                "id",
                "match",
                "name",
                "operate",
                "proxyHost",
                "proxyPass"
            ],
            "properties": {
                "cache": {
                    "type": "boolean"
                },
                "cacheTime": {
                    "type": "integer"
                },
                "cacheUnit": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "filePath": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "match": {
                    "type": "string"
                },
                "modifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operate": {
                    "type": "string"
                },
                "proxyHost": {
                    "type": "string"
                },
                "proxyPass": {
                    "type": "string"
                },
                "proxySSLName": {
                    "type": "string"
                },
                "replaces": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sni": {
                    "type": "boolean"
                }
            }
        },
        "request.WebsiteProxyReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteResourceReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteSSLApply": {
            "type": "object",
            "required": [
                "ID"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "disableLog": {
                    "type": "boolean"
                },
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "skipDNSCheck": {
                    "type": "boolean"
                }
            }
        },
        "request.WebsiteSSLCreate": {
            "type": "object",
            "required": [
                "acmeAccountId",
                "primaryDomain",
                "provider"
            ],
            "properties": {
                "acmeAccountId": {
                    "type": "integer"
                },
                "apply": {
                    "type": "boolean"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "disableCNAME": {
                    "type": "boolean"
                },
                "dnsAccountId": {
                    "type": "integer"
                },
                "execShell": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "nameserver1": {
                    "type": "string"
                },
                "nameserver2": {
                    "type": "string"
                },
                "otherDomains": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "pushDir": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "string"
                },
                "skipDNS": {
                    "type": "boolean"
                }
            }
        },
        "request.WebsiteSSLSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "acmeAccountID": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteSSLUpdate": {
            "type": "object",
            "required": [
                "id",
                "primaryDomain",
                "provider"
            ],
            "properties": {
                "acmeAccountId": {
                    "type": "integer"
                },
                "apply": {
                    "type": "boolean"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "disableCNAME": {
                    "type": "boolean"
                },
                "dnsAccountId": {
                    "type": "integer"
                },
                "execShell": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "nameserver1": {
                    "type": "string"
                },
                "nameserver2": {
                    "type": "string"
                },
                "otherDomains": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "pushDir": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "string"
                },
                "skipDNS": {
                    "type": "boolean"
                }
            }
        },
        "request.WebsiteSSLUpload": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "certificatePath": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPath": {
                    "type": "string"
                },
                "sslID": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "paste",
                        "local"
                    ]
                }
            }
        },
        "request.WebsiteSearch": {
            "type": "object",
            "required": [
                "order",
                "orderBy",
                "page",
                "pageSize"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "null",
                        "ascending",
                        "descending"
                    ]
                },
                "orderBy": {
                    "type": "string",
                    "enum": [
                        "primary_domain",
                        "type",
                        "status",
                        "created_at",
                        "expire_date"
                    ]
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "websiteGroupId": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteUpdate": {
            "type": "object",
            "required": [
                "id",
                "primaryDomain"
            ],
            "properties": {
                "IPV6": {
                    "type": "boolean"
                },
                "expireDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "webSiteGroupID": {
                    "type": "integer"
                }
            }
        },
        "request.WebsiteUpdateDir": {
            "type": "object",
            "required": [
                "id",
                "siteDir"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "siteDir": {
                    "type": "string"
                }
            }
        },
        "request.WebsiteUpdateDirPermission": {
            "type": "object",
            "required": [
                "group",
                "id",
                "user"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "response.AppConfig": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "allowPort": {
                    "type": "boolean"
                },
                "containerName": {
                    "type": "string"
                },
                "cpuQuota": {
                    "type": "number"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "editCompose": {
                    "type": "boolean"
                },
                "hostMode": {
                    "type": "boolean"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "memoryUnit": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppParam"
                    }
                },
                "pullImage": {
                    "type": "boolean"
                }
            }
        },
        "response.AppDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "crossVersionUpdate": {
                    "type": "boolean"
                },
                "document": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "installed": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "readMe": {
                    "type": "string"
                },
                "recommend": {
                    "type": "integer"
                },
                "required": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "shortDescEn": {
                    "type": "string"
                },
                "shortDescZh": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "response.AppDetailDTO": {
            "type": "object",
            "properties": {
                "appId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "dockerCompose": {
                    "type": "string"
                },
                "downloadCallBackUrl": {
                    "type": "string"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "hostMode": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "ignoreUpgrade": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "integer"
                },
                "lastVersion": {
                    "type": "string"
                },
                "params": {},
                "status": {
                    "type": "string"
                },
                "update": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.AppInstalledCheck": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "string"
                },
                "appInstallId": {
                    "type": "integer"
                },
                "containerName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "httpPort": {
                    "type": "integer"
                },
                "httpsPort": {
                    "type": "integer"
                },
                "installPath": {
                    "type": "string"
                },
                "isExist": {
                    "type": "boolean"
                },
                "lastBackupAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.AppItem": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "installed": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "shortDescEn": {
                    "type": "string"
                },
                "shortDescZh": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "type": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.AppParam": {
            "type": "object",
            "properties": {
                "edit": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "labelEn": {
                    "type": "string"
                },
                "labelZh": {
                    "type": "string"
                },
                "multiple": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "rule": {
                    "type": "string"
                },
                "showValue": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {},
                "values": {}
            }
        },
        "response.AppRes": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.AppService": {
            "type": "object",
            "properties": {
                "config": {},
                "from": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.AppUpdateRes": {
            "type": "object",
            "properties": {
                "appList": {
                    "$ref": "#/definitions/dto.AppList"
                },
                "appStoreLastModified": {
                    "type": "integer"
                },
                "canUpdate": {
                    "type": "boolean"
                },
                "isSyncing": {
                    "type": "boolean"
                }
            }
        },
        "response.DatabaseConn": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.DirSizeRes": {
            "type": "object",
            "required": [
                "size"
            ],
            "properties": {
                "size": {
                    "type": "number"
                }
            }
        },
        "response.FileInfo": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "favoriteID": {
                    "type": "integer"
                },
                "gid": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "isDetail": {
                    "type": "boolean"
                },
                "isDir": {
                    "type": "boolean"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "isSymlink": {
                    "type": "boolean"
                },
                "itemTotal": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.FileInfo"
                    }
                },
                "linkPath": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "modTime": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "response.FileLineContent": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "end": {
                    "type": "boolean"
                },
                "lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.FileTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FileTree"
                    }
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDir": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "response.FileWgetRes": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "response.HostToolConfig": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.HostToolRes": {
            "type": "object",
            "properties": {
                "config": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "response.IgnoredApp": {
            "type": "object",
            "properties": {
                "detailID": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.NginxAntiLeechRes": {
            "type": "object",
            "properties": {
                "blocked": {
                    "type": "boolean"
                },
                "cache": {
                    "type": "boolean"
                },
                "cacheTime": {
                    "type": "integer"
                },
                "cacheUint": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "extends": {
                    "type": "string"
                },
                "logEnable": {
                    "type": "boolean"
                },
                "noneRef": {
                    "type": "boolean"
                },
                "return": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.NginxAuthRes": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NginxAuth"
                    }
                }
            }
        },
        "response.NginxFile": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.NginxParam": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.NginxRedirectConfig": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enable": {
                    "type": "boolean"
                },
                "filePath": {
                    "type": "string"
                },
                "keepPath": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "redirect": {
                    "type": "string"
                },
                "redirectRoot": {
                    "type": "boolean"
                },
                "target": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "websiteID": {
                    "type": "integer"
                }
            }
        },
        "response.NginxRewriteRes": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.NginxStatus": {
            "type": "object",
            "properties": {
                "accepts": {
                    "type": "string"
                },
                "active": {
                    "type": "string"
                },
                "handled": {
                    "type": "string"
                },
                "reading": {
                    "type": "string"
                },
                "requests": {
                    "type": "string"
                },
                "waiting": {
                    "type": "string"
                },
                "writing": {
                    "type": "string"
                }
            }
        },
        "response.NodeModule": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.PHPConfig": {
            "type": "object",
            "properties": {
                "disableFunctions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "uploadMaxSize": {
                    "type": "string"
                }
            }
        },
        "response.PHPExtensionsDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "extensions": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.PackageScripts": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                }
            }
        },
        "response.ProcessStatus": {
            "type": "object",
            "properties": {
                "PID": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                }
            }
        },
        "response.RuntimeDTO": {
            "type": "object",
            "properties": {
                "appDetailID": {
                    "type": "integer"
                },
                "appID": {
                    "type": "integer"
                },
                "appParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.AppParam"
                    }
                },
                "codeDir": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "exposedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.ExposedPort"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.SupervisorProcessConfig": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numprocs": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ProcessStatus"
                    }
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteAcmeAccountDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "eabHmacKey": {
                    "type": "string"
                },
                "eabKid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteCADTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "csr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "organizationUint": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteDNSRes": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "err": {
                    "type": "string"
                },
                "resolve": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteDTO": {
            "type": "object",
            "properties": {
                "IPV6": {
                    "type": "boolean"
                },
                "accessLog": {
                    "type": "boolean"
                },
                "accessLogPath": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "appInstallId": {
                    "type": "integer"
                },
                "appName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultServer": {
                    "type": "boolean"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WebsiteDomain"
                    }
                },
                "errorLog": {
                    "type": "boolean"
                },
                "errorLogPath": {
                    "type": "string"
                },
                "expireDate": {
                    "type": "string"
                },
                "ftpId": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "httpConfig": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "proxyType": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "rewrite": {
                    "type": "string"
                },
                "runtimeID": {
                    "type": "integer"
                },
                "runtimeName": {
                    "type": "string"
                },
                "siteDir": {
                    "type": "string"
                },
                "sitePath": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "webSiteGroupId": {
                    "type": "integer"
                },
                "webSiteSSL": {
                    "$ref": "#/definitions/model.WebsiteSSL"
                },
                "webSiteSSLId": {
                    "type": "integer"
                }
            }
        },
        "response.WebsiteDirConfig": {
            "type": "object",
            "properties": {
                "dirs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msg": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "userGroup": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteHTTPS": {
            "type": "object",
            "properties": {
                "SSL": {
                    "$ref": "#/definitions/model.WebsiteSSL"
                },
                "SSLProtocol": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "algorithm": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "hsts": {
                    "type": "boolean"
                },
                "httpConfig": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteHtmlRes": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteLog": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "end": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteNginxConfig": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.NginxParam"
                    }
                }
            }
        },
        "response.WebsiteOption": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "primaryDomain": {
                    "type": "string"
                }
            }
        },
        "response.WebsitePreInstallCheck": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "response.WebsiteSSLDTO": {
            "type": "object",
            "properties": {
                "acmeAccount": {
                    "$ref": "#/definitions/model.WebsiteAcmeAccount"
                },
                "acmeAccountId": {
                    "type": "integer"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "caId": {
                    "type": "integer"
                },
                "certURL": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "disableCNAME": {
                    "type": "boolean"
                },
                "dnsAccount": {
                    "$ref": "#/definitions/model.WebsiteDnsAccount"
                },
                "dnsAccountId": {
                    "type": "integer"
                },
                "domains": {
                    "type": "string"
                },
                "execShell": {
                    "type": "boolean"
                },
                "expireDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "keyType": {
                    "type": "string"
                },
                "logPath": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "nameserver1": {
                    "type": "string"
                },
                "nameserver2": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "pem": {
                    "type": "string"
                },
                "primaryDomain": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "pushDir": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "string"
                },
                "skipDNS": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "websites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Website"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Custom Token Format, Format: md5('1panel' + API-Key + UnixTimestamp).\n` + "`" + `` + "`" + `` + "`" + `\neg:\ncurl -X GET \"http://localhost:4004/api/v1/dashboard/current\" \\\n-H \"1Panel-Token: \u003c1panel_token\u003e\" \\\n-H \"1Panel-Timestamp: \u003ccurrent_unix_timestamp\u003e\"\n` + "`" + `` + "`" + `` + "`" + `\n- ` + "`" + `1Panel-Token` + "`" + ` is the key for the panel API Key.",
            "type": "apiKey",
            "name": "1Panel-Token",
            "in": "header"
        },
        "Timestamp": {
            "description": "- ` + "`" + `1Panel-Timestamp` + "`" + ` is the Unix timestamp of the current time in seconds.",
            "type": "apiKey",
            "name": "1Panel-Timestamp",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "1Panel",
	Description:      "Top-Rated Web-based Linux Server Management Tool",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
